{"version":3,"sources":["components/NavBar.tsx","components/WrappedRoute.tsx","pm/context/EditorViewProvider.ts","pm/Observable.ts","pm/context/SnapshotProvider.ts","pm/context/snapshots.ts","pm/context/YjsProvider.ts","pm/context/Providers.ts","pm/context/EditorContext.ts","components/Toolbar.tsx","pm/commands.ts","components/editor/ChangesControls.tsx","components/editor/SnapshotsList.tsx","pm/react/useSnapshotProvider.ts","components/editor/RightPanel.tsx","pm/schema.ts","pm/plugins.ts","pm/PMEditor.tsx","components/editor/Editor.tsx","pages/FrontPage.tsx","routes.tsx","index.tsx"],"names":["NavBar","props","className","Container","Nav","Link","to","exact","activeClassName","styled","div","nav","NavLink","WrappedRoute","Component","component","rest","render","MainWrapper","MainContainer","main","EditorViewProvider","_view","view","this","Error","cmd","state","dispatch","focus","hasFocus","tr","scrollIntoView","toJSON","plugins","rawValue","EditorState","fromJSON","schema","updateState","Observable","_observers","Map","key","cb","current","get","set","Set","add","observers","delete","size","args","Array","from","values","forEach","SnapshotProvider","viewProvider","yjsProvider","_observable","snapshots","Y","selectedSnapshot","onInit","self","ydoc","getArray","observe","callback","updateVersions","unobserve","versions","emit","prevVersion","length","console","info","ysnap","clientID","prevSnapshot","snapshot","prevVersionID","sv","push","date","Date","getTime","snap","log","resumeEditing","ySnapshot","prevYSnapshot","foundPrevVersion","s","binding","ySyncPluginKey","getState","renderSnapshot","v","i","unrenderSnapshot","on","off","testUsers","username","color","lightColor","YjsProvider","_ydoc","_permanentUserData","_provider","_yXmlFragment","user","Math","floor","random","setUserMapping","gc","WebsocketProvider","getXmlFragment","createDefaultProviders","snapshotProvider","ReactEditorContext","createContext","useEditorContext","useContext","commandIcons","title","icon","Toolbar","IconList","map","item","IconItem","IconButton","onClick","execCommand","cursor","selection","head","blockNodePos","doc","resolve","start","node","nodeAt","attrs","makeMeRed","setNodeMarkup","undefined","handleIconClick","li","button","ChangesControls","createSnapshot","SnapshotsList","useState","isVisible","setIsVisible","snapshotsState","setState","useEffect","newState","onUpdate","offUpdate","useSnapshotProvider","Header","Title","List","SnapListItem","TitleWrapper","Buttons","inspectSnapshot","handleInspectSnapshot","deleteSnapshot","handleDeleteSnapshot","toLocaleString","h3","ul","RightPanel","RightSide","Schema","nodes","content","paragraph","default","group","parseDOM","tag","toDOM","el","style","blockquote","defining","horizontal_rule","heading","level","code_block","marks","code","preserveWhitespace","text","image","inline","src","alt","draggable","getAttrs","p","dom","getAttribute","hard_break","selectable","link","href","inclusive","italic","bold","fontWeight","test","strikethrough","ychange","type","ychange_user","ychange_type","calcYChangeStyle","ychange_color","light","hoverWrapper","dark","els","class","ctx","ySyncPlugin","yXmlFragment","permanentUserData","colors","yCursorPlugin","provider","awareness","yUndoPlugin","keymap","undo","redo","concat","exampleSetup","history","PMEditor","editorViewRef","useRef","editorRef","dispatchTransaction","transaction","editorState","apply","onEdit","useLayoutEffect","init","create","createEditorState","editorViewDOM","element","EditorView","mount","window","editorView","createEditorView","onEditorReady","destroy","id","ref","Editor","editorProviders","useMemo","Provider","value","ViewGrid","LeftSide","applyDevTools","FrontPage","Routes","basename","process","path","document","getElementById"],"mappings":"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","file":"static/js/main.735a7e32.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { RouteComponentProps } from 'react-router'\n\ninterface IProps extends RouteComponentProps<{}> {\n  className?: string\n}\n\nexport const NavBar = (props: IProps) => {\n  const { className} = props\n  return (\n    <Container className={className}>\n      <Nav>\n        <Link to=\"/\" exact activeClassName=\"current\">Front page</Link>\n      </Nav>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  background: var(--color-primary);\n  box-shadow: 0 0 2px 2px rgba(0,0,0,0.18);\n  padding: 1rem;\n`\nconst Nav = styled.nav`\n  align-items: center;\n  color: #fff;\n  display: flex;\n`\nconst Link = styled(NavLink)`\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  transition: 0.2s hover;\n  &:hover {\n    text-decoration: underline;\n  }\n  &.current {\n    font-weight: 600;\n  }\n`\n","import * as React from 'react'\nimport { Route, RouteProps, RouteComponentProps } from 'react-router'\nimport styled from 'styled-components'\n\nimport { NavBar } from './NavBar'\n\ntype ReactComponent = React.ComponentClass<any> | React.StatelessComponent<any>\n\ninterface IWrappedRoute extends RouteProps {\n  component: ReactComponent\n}\n\nconst renderNoMainContainerWrapper = (Component: ReactComponent) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <Component {...props}/>\n  </MainWrapper>\n\nconst renderWrapper = (Component: ReactComponent) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <MainContainer>\n      <Component {...props}/>\n    </MainContainer>\n  </MainWrapper>\n\nexport const NoMainContainerRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderNoMainContainerWrapper(component)}/>\n\nexport const WrappedRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderWrapper(component)}/>\n\nconst MainWrapper = styled.div`\n  min-height: 100vh;\n`\nconst MainContainer = styled.main`\n  margin: 40px auto 0 auto;\n  max-width: 800px;\n  padding-bottom: 20px;\n  @media only screen and (max-width: 720px) {\n    margin: 40px 20px 0 20px;\n    padding-bottom: 20px;\n  }\n`\n","import { EditorView } from 'prosemirror-view'\nimport { EditorState } from 'prosemirror-state'\nimport { ExampleSchema } from '../schema'\n\nimport { Command, JSONEditorState } from '../editor-types'\n\nexport class EditorViewProvider {\n\n  _view?: EditorView<ExampleSchema>\n\n  init(view: EditorView<ExampleSchema>) {\n    this._view = view\n  }\n\n  get view(): EditorView<ExampleSchema> {\n    if (!this._view) {\n      throw Error('EditorViewProvider view accessed without EditorView instance')\n    }\n    return this._view\n  }\n\n  execCommand(cmd: Command) {\n    cmd(this.view.state, this.view.dispatch)\n    this.focus()\n  }\n\n  focus() {\n    if (!this._view || this._view.hasFocus()) {\n      return false\n    }\n    this._view.focus()\n    this._view.dispatch(this._view.state.tr.scrollIntoView())\n    return true\n  }\n  \n  stateToJSON() {\n    const state = this.view.state.toJSON()\n    return { ...state, plugins: [] } as unknown as JSONEditorState\n  }\n\n  hydrateStateFromJSON(rawValue: Object) {\n    const state = EditorState.fromJSON({\n      schema: this.view.state.schema,\n      plugins: this.view.state.plugins,\n    }, rawValue)\n\n    this.view.updateState(state)\n    // Fire an empty transaction to trigger PluginStateProvider to update\n    this.view.dispatch(this.view.state.tr)\n  }\n\n  replaceState(state: EditorState) {\n    this.view.updateState(state)\n    this.view.dispatch(this.view.state.tr)\n  }\n}","/**\n * Modified from https://github.com/dmonad/lib0/blob/main/observable.js\n */\nexport class Observable<K = string> {\n  _observers = new Map<K, Set<(args: any[]) => void>>()\n\n  on(key: K, cb: (...args: any[]) => void) {\n    const current = this._observers.get(key)\n    if (current) {\n      this._observers.set(key, new Set(current.add(cb)))\n    } else {\n      this._observers.set(key, new Set([cb]))\n    }\n  }\n\n  off(key: K, cb: (...args: any[]) => void) {\n    const observers = this._observers.get(key)\n    if (observers) {\n      observers.delete(cb)\n      if (observers.size === 0) {\n        this._observers.delete(key)\n      }\n    }\n  }\n\n  emit(key: K, ...args: any[]) {\n    // TODO the typing of this annoying thing\n    // @ts-ignore\n    return Array.from((this._observers.get(key) || new Set()).values()).forEach(cb => cb(...args))\n  }\n\n  destroy() {\n    this._observers = new Map()\n  }\n}","import * as Y from 'yjs'\nimport { ySyncPluginKey, ProsemirrorBinding } from 'y-prosemirror'\n\nimport { EditorViewProvider } from './EditorViewProvider'\nimport { YjsProvider } from './YjsProvider'\nimport { Observable } from '../Observable'\n\nimport { Snapshot, createSnapshot } from './snapshots'\n\nexport interface SnapshotProviderState {\n  snapshots: Y.Array<Snapshot>\n  selectedSnapshot: Snapshot | null\n}\n\nexport class SnapshotProvider {\n\n  _observable = new Observable<'update'>()\n  viewProvider: EditorViewProvider\n  yjsProvider: YjsProvider\n\n  snapshots: Y.Array<Snapshot> = new Y.Array()\n  selectedSnapshot: Snapshot | null = null\n\n  constructor(viewProvider: EditorViewProvider, yjsProvider: YjsProvider) {\n    this.viewProvider = viewProvider\n    this.yjsProvider = yjsProvider\n    yjsProvider.onInit(() => {\n      // This is so ridiculous\n      // But the reason is that the versions is updated async as it's fetched from the server\n      // (or loaded from indexedDB) so this is the only way to get correctly notified when that happens.\n      // Actually, I might have to keep the observer now that I think of it...\n      const self = this\n      yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions').observe(function callback() {\n        self.updateVersions()\n        yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions').unobserve(callback)\n      })\n    })\n  }\n\n  get state() : SnapshotProviderState {\n    return {\n      snapshots: this.snapshots,\n      selectedSnapshot: this.selectedSnapshot,\n    }\n  }\n\n  updateVersions() {\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    this.snapshots = versions\n    this._observable.emit('update', this.state)\n  }\n\n  createSnapshot() {\n    const ydoc = this.yjsProvider.ydoc\n    const versions = ydoc.getArray<Snapshot>('pm-doc-versions')\n    const prevVersion = versions.length === 0 ? null : versions.get(versions.length - 1)\n    console.info(prevVersion)\n    const prevSnapshot = prevVersion === null ? Y.emptySnapshot : Y.decodeSnapshot(prevVersion.snapshot)\n    const snapshot = Y.snapshot(ydoc)\n    console.info('created snapshot', snapshot)\n    if (prevVersion != null) {\n      // account for the action of adding a version to ydoc\n      const prevVersionID = prevSnapshot.sv.get(prevVersion.clientID)\n      if (!prevVersionID) {\n        throw Error('Yjs prevVersionID was undefined!')\n      }\n      prevSnapshot.sv.set(prevVersion.clientID, prevVersionID + 1)\n    }\n    if (!Y.equalSnapshots(prevSnapshot, snapshot)) {\n      versions.push([createSnapshot(snapshot, ydoc.clientID)])\n      this.updateVersions()\n    }\n  }\n\n  inspectSnapshot(snap: Snapshot | undefined) {\n    console.log('snap', snap)\n    if (!snap || this.selectedSnapshot?.date === snap.date) {\n      return this.resumeEditing()\n    }\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    const ySnapshot = Y.decodeSnapshot(snap.snapshot)\n    console.log('inspect snapshot', ySnapshot)\n    let prevYSnapshot: Y.Snapshot = Y.emptySnapshot, foundPrevVersion = false\n    versions.forEach((s => {\n      if (s.date === snap.date) {\n        foundPrevVersion = true\n      } else if (!foundPrevVersion) {\n        prevYSnapshot = Y.decodeSnapshot(s.snapshot)\n      }\n    }))\n    const binding: ProsemirrorBinding | null = ySyncPluginKey.getState(this.viewProvider.view.state).binding\n    if (binding) {\n      binding.renderSnapshot(ySnapshot, prevYSnapshot)\n    }\n    this.selectedSnapshot = snap\n    this._observable.emit('update', this.state)\n  }\n\n  deleteSnapshot(snap: Snapshot) {\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    versions.forEach((v, i) => {\n      if (v.date === snap.date) {\n        versions.delete(i)\n        this._observable.emit('update', this.state)\n      }\n    })\n  }\n\n  resumeEditing() {\n    const binding: ProsemirrorBinding | null = ySyncPluginKey.getState(this.viewProvider.view.state).binding\n    if (binding) {\n      binding.unrenderSnapshot()\n    }\n    this.selectedSnapshot = null\n    this._observable.emit('update', this.state)\n  }\n\n  onUpdate(cb: (data: any) => void) {\n    this._observable.on('update', cb)\n  }\n\n  offUpdate(cb: (data: any) => void) {\n    this._observable.off('update', cb)\n  }\n}\n","import * as Y from 'yjs'\n\nexport interface Snapshot {\n  date: number\n  snapshot: Uint8Array\n  clientID: number\n}\n\nexport function createSnapshot(ysnap: Y.Snapshot, clientID: number): Snapshot {\n  return {\n    date: new Date().getTime(),\n    snapshot: Y.encodeSnapshot(ysnap),\n    clientID,\n  }\n}","import * as Y from 'yjs'\nimport { WebsocketProvider } from 'y-websocket'\n\nimport { EditorViewProvider } from './EditorViewProvider'\nimport { Observable } from '../Observable'\n\nconst testUsers = [\n  { username: 'Alice', color: '#ecd444', lightColor: '#ecd44433' },\n  { username: 'Bob', color: '#ee6352', lightColor: '#ee635233' },\n  { username: 'Max', color: '#6eeb83', lightColor: '#6eeb8333' }\n]\n\nexport class YjsProvider {\n\n  _observable = new Observable<'init'>()\n  viewProvider: EditorViewProvider\n\n  _ydoc?: Y.Doc\n  _permanentUserData?: Y.PermanentUserData\n  _provider?: WebsocketProvider\n  _yXmlFragment?: Y.XmlFragment\n\n  constructor(viewProvider: EditorViewProvider) {\n    this.viewProvider = viewProvider\n  }\n\n  get ydoc() {\n    if (!this._ydoc) throw Error('YjsProvider ydoc accessed without initialization!')\n    return this._ydoc\n  }\n\n  get provider() {\n    if (!this._provider) throw Error('YjsProvider provider accessed without initialization!')\n    return this._provider\n  }\n\n  get yXmlFragment() {\n    if (!this._yXmlFragment) throw Error('YjsProvider yXmlFragment accessed without initialization!')\n    return this._yXmlFragment\n  }\n\n  get permanentUserData() {\n    if (!this._permanentUserData) throw Error('YjsProvider permanentUserData accessed without initialization!')\n    return this._permanentUserData\n  }\n\n  init() {\n    this._ydoc = new Y.Doc()\n    this._permanentUserData = new Y.PermanentUserData(this._ydoc)\n    const user = testUsers[Math.floor(Math.random() * 3)]\n    this._permanentUserData.setUserMapping(this._ydoc, this._ydoc.clientID, user.username)\n    this._ydoc.gc = false\n    this._provider = new WebsocketProvider('wss://demos.yjs.dev', 'prosemirror-versions-demo', this._ydoc)\n    this._yXmlFragment = this._ydoc.getXmlFragment('pm-doc')\n    this._observable.emit('init')\n  }\n\n  onInit(cb: (data: any) => void) {\n    this._observable.on('init', cb)\n  }\n\n  offInit(cb: (data: any) => void) {\n    this._observable.off('init', cb)\n  }\n}\n","import { EditorViewProvider } from './EditorViewProvider'\nimport { SnapshotProvider } from './SnapshotProvider'\nimport { YjsProvider } from './YjsProvider'\n\nexport { EditorViewProvider } from './EditorViewProvider'\nexport { SnapshotProvider } from './SnapshotProvider'\nexport { YjsProvider } from './YjsProvider'\n\nexport interface IProviders {\n  viewProvider: EditorViewProvider\n  snapshotProvider: SnapshotProvider\n  yjsProvider: YjsProvider\n}\n\nexport const createDefaultProviders = (): IProviders => {\n  const viewProvider = new EditorViewProvider()\n  const yjsProvider = new YjsProvider(viewProvider)\n  const snapshotProvider = new SnapshotProvider(viewProvider, yjsProvider)\n  return {\n    viewProvider,\n    snapshotProvider,\n    yjsProvider,\n  }\n}\n","import { createContext, useContext } from 'react'\nimport { IProviders, createDefaultProviders } from './Providers'\n\nexport type EditorContext = IProviders\n\nexport const ReactEditorContext = createContext<EditorContext>(createDefaultProviders())\n\nexport const useEditorContext = () => useContext(ReactEditorContext)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FiAtSign } from 'react-icons/fi'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\nimport { setBlockNodeAttribute } from 'pm/commands'\n\ninterface IProps {\n  className?: string\n}\n\ntype IconType = 'update-attribute'\n\nconst commandIcons: {\n  title: IconType\n  icon: React.ReactNode\n}[] = [\n  {\n    title: 'update-attribute',\n    icon: <FiAtSign size={16} />\n  },\n]\n\nexport function Toolbar(props: IProps) {\n  const { className } = props\n  const { viewProvider } = useEditorContext()\n\n  function handleIconClick(title: IconType) {\n    switch (title) {\n      case 'update-attribute':\n        viewProvider.execCommand(setBlockNodeAttribute())\n        return\n    }\n  }\n  return (\n    <Container className={className}>\n      <IconList>\n        {commandIcons.map(item =>\n          <IconItem key={item.title}>\n            <IconButton onClick={() => handleIconClick(item.title)}>\n              {item.icon}\n            </IconButton>\n          </IconItem>\n        )}\n      </IconList>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  background: var(--color-primary-lighter);\n  padding: 1rem;\n`\nconst IconList = styled.div`\n  align-items: center;\n  color: #fff;\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`\nconst IconItem = styled.li`\n  & + & {\n    margin-left: 1rem;\n  }\n`\nconst IconButton = styled.button`\n  align-items: center;\n  background: transparent;\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  padding: 0.25rem;\n  &:hover {\n    background: rgba(255, 255, 255, 0.7);\n    opacity: 0.7;\n  }\n  &.active {\n    background: rgb(215 227 255);\n    box-shadow: 0 0 2px 2px rgb(0 0 0 / 18%);\n  }\n`\n","import type { Command } from './editor-types'\n\nexport const setBlockNodeAttribute = () : Command => (state, dispatch) => {\n  const cursor = state.selection.head\n  const blockNodePos = state.doc.resolve(cursor).start(1) - 1\n  const node = state.doc.nodeAt(blockNodePos)\n  let tr\n  if (node?.attrs.makeMeRed) {\n    tr = state.tr.setNodeMarkup(blockNodePos, undefined, { makeMeRed: false })\n  } else {\n    tr = state.tr.setNodeMarkup(blockNodePos, undefined, { makeMeRed: true })\n  }\n  if (dispatch) {\n    dispatch(tr)\n    return true\n  }\n  return false\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\n\ninterface IProps {\n  className?: string\n}\n\nexport function ChangesControls(props: IProps) {\n  const { className } = props\n  const { snapshotProvider } = useEditorContext()\n\n  function handleSnapshot() {\n    snapshotProvider.createSnapshot()\n  }\n  return (\n    <Container className={className}>\n      <button onClick={() => handleSnapshot()}>\n        Snapshot\n      </button>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  button {\n    margin: 0.05rem;\n  }\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\nimport { useSnapshotProvider } from 'pm/react/useSnapshotProvider'\n\nimport { Snapshot } from 'pm/context/snapshots'\n\ninterface IProps {\n  className?: string\n}\n\nexport function SnapshotsList(props: IProps) {\n  const { className } = props\n  const [isVisible, setIsVisible] = useState(true)\n  const { snapshotProvider } = useEditorContext()\n  const snapshotsState = useSnapshotProvider()\n\n  function handleInspectSnapshot(snap: Snapshot) {\n    snapshotProvider.inspectSnapshot(snap)\n  }\n  function handleResumeEditing() {\n    snapshotProvider.resumeEditing()\n  }\n  function handleDeleteSnapshot(snap: Snapshot) {\n    snapshotProvider.deleteSnapshot(snap)\n  }\n  return (\n    <>\n    <Header>\n      <button onClick={() => setIsVisible(!isVisible)} className=\"header-btn\">\n        <span>{ isVisible ? <FiChevronDown size={16}/> : <FiChevronRight size={16}/>}</span>\n        <Title>Snapshots</Title>\n      </button>\n      <button\n        className={`inspect-btn ${snapshotsState.selectedSnapshot ? '' : 'hidden'}`}\n        onClick={() => handleResumeEditing()}\n      >\n        Stop inspecting\n      </button>\n    </Header>\n    <List className={`${className} ${isVisible ? '' : 'hidden'}`}>\n      { snapshotsState?.snapshots.map((snap: Snapshot, i: number) =>\n      <SnapListItem\n        key={`${snap.date}-${i}`}\n      >\n        <TitleWrapper>\n          <h4>Snapshot {i + 1}</h4>\n          <Buttons>\n            <button onClick={() => handleInspectSnapshot(snap)}>\n              Inspect\n            </button>\n            <button onClick={() => handleDeleteSnapshot(snap)}>\n              Delete\n            </button>\n          </Buttons>\n        </TitleWrapper>\n        <small>{new Date(snap.date).toLocaleString()}</small>\n      </SnapListItem>\n      )}\n    </List>\n    </>\n  )\n}\n\nconst Header = styled.div`\n  align-items: center;\n  display: flex;\n  margin: 1rem 0 0.5rem 0;\n  & > .header-btn {\n    align-items: center;\n    background: transparent;\n    border: 0;\n    cursor: pointer;\n    display: flex;\n    margin: 0;\n    padding: 0;\n  }\n  & > .inspect-btn {\n    margin-left: 1rem;\n  }\n  .hidden {\n    visibility: hidden;\n  }\n`\nconst Title = styled.h3`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0 0 0 0.5rem;\n  text-transform: uppercase;\n`\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 0;\n  max-height: 300px;\n  overflow-y: scroll;\n  padding: 0;\n  &.hidden {\n    display: none;\n    visibility: hidden;\n  }\n  & > li:nth-child(odd) {\n    background: #f3f3f3;\n  }\n`\nconst SnapListItem = styled.li`\n  border-radius: 2px;\n  padding: 0.25rem;\n`\nconst TitleWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  & > h4 {\n    margin: 0;\n    margin-right: 1rem;\n  }\n`\nconst Buttons = styled.div`\n  display: flex;\n  margin: 0.25rem 0;\n  button + button {\n    margin-left: 0.5rem;\n  }\n`\n","import { useState, useEffect } from 'react'\n\nimport { useEditorContext } from '../context/EditorContext'\nimport type { SnapshotProviderState } from 'pm/context/SnapshotProvider'\n\nexport function useSnapshotProvider() {\n  const { snapshotProvider } = useEditorContext()\n\n  const [state, setState] = useState<SnapshotProviderState>(snapshotProvider.state)\n\n  useEffect(() => {\n    const cb = (newState: SnapshotProviderState) => {\n      setState(newState)\n    }\n    setState(snapshotProvider.state)\n    snapshotProvider.onUpdate(cb)\n    return () => {\n      snapshotProvider.offUpdate(cb)\n    }\n  }, [snapshotProvider])\n\n  return state\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ChangesControls } from './ChangesControls'\nimport { SnapshotsList } from './SnapshotsList'\n\nexport function RightPanel() {\n  return (\n    <RightSide>\n      <ChangesControls className=\"changes-controls\"/>\n      <SnapshotsList />\n    </RightSide>\n  )\n}\n\nconst RightSide = styled.div``\n","import { Schema } from 'prosemirror-model'\n\nexport type Marks = 'bold' | 'code' | 'italic' | 'link' | 'strikethrough' | 'ychange'\nexport type Nodes =\n  | 'blockquote'\n  | 'code_block'\n  | 'doc'\n  | 'hard_break'\n  | 'heading'\n  | 'horizontal_rule'\n  | 'image'\n  | 'paragraph'\n  | 'text'\n\nexport type ExampleSchema = Schema<Nodes, Marks>\n\nexport const schema: ExampleSchema = new Schema<Nodes, Marks>({\n  nodes: {\n    // :: NodeSpec The top level document node.\n    doc: {\n      content: 'block+',\n    },\n\n    // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n    // as a `<p>` element.\n    paragraph: {\n      attrs: { makeMeRed: { default: null } },\n      content: 'inline*',\n      group: 'block',\n      parseDOM: [{ tag: 'p' }],\n      toDOM(el) {\n        const attrs = {\n          style: el.attrs.makeMeRed ? 'background: red;' : undefined\n        }\n        return ['p', attrs, 0]\n      },\n    },\n\n    // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n    blockquote: {\n      attrs: { makeMeRed: { default: null } },\n      content: 'block+',\n      group: 'block',\n      defining: true,\n      parseDOM: [{ tag: 'blockquote' }],\n      toDOM(el) {\n        const attrs = {\n          style: el.attrs.makeMeRed ? 'background: red;' : undefined\n        }\n        return ['blockquote', attrs, 0]\n      },\n    },\n\n    // :: NodeSpec A horizontal rule (`<hr>`).\n    horizontal_rule: {\n      group: 'block',\n      parseDOM: [{ tag: 'hr' }],\n      toDOM() {\n        return ['hr']\n      },\n    },\n\n    // :: NodeSpec A heading textblock, with a `level` attribute that\n    // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n    // `<h6>` elements.\n    heading: {\n      attrs: { level: { default: 1 } },\n      content: 'inline*',\n      group: 'block',\n      defining: true,\n      parseDOM: [\n        { tag: 'h1', attrs: { level: 1 } },\n        { tag: 'h2', attrs: { level: 2 } },\n        { tag: 'h3', attrs: { level: 3 } },\n        { tag: 'h4', attrs: { level: 4 } },\n        { tag: 'h5', attrs: { level: 5 } },\n        { tag: 'h6', attrs: { level: 6 } },\n      ],\n      toDOM(node) {\n        return ['h' + node.attrs.level, 0]\n      },\n    },\n\n    // :: NodeSpec A code listing. Disallows marks or non-text inline\n    // nodes by default. Represented as a `<pre>` element with a\n    // `<code>` element inside of it.\n    code_block: {\n      content: 'text*',\n      marks: '',\n      group: 'block',\n      code: true,\n      defining: true,\n      parseDOM: [{ tag: 'pre', preserveWhitespace: 'full' }],\n      toDOM() {\n        return ['pre', ['code', 0]]\n      },\n    },\n\n    // :: NodeSpec The text node.\n    text: {\n      group: 'inline',\n    },\n\n    // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n    // `alt`, and `href` attributes. The latter two default to the empty\n    // string.\n    image: {\n      inline: true,\n      attrs: {\n        src: {},\n        alt: { default: null },\n        title: { default: null },\n      },\n      group: 'inline',\n      draggable: true,\n      parseDOM: [\n        {\n          tag: 'img[src]',\n          getAttrs(p) {\n            const dom = p as HTMLElement\n            return {\n              src: dom.getAttribute('src'),\n              title: dom.getAttribute('title'),\n              alt: dom.getAttribute('alt'),\n            }\n          },\n        },\n      ],\n      toDOM(node) {\n        const { src, alt, title } = node.attrs\n        return ['img', { src, alt, title }]\n      },\n    },\n\n    // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n    hard_break: {\n      inline: true,\n      group: 'inline',\n      selectable: false,\n      parseDOM: [{ tag: 'br' }],\n      toDOM() {\n        return ['br']\n      },\n    },\n  },\n  marks: {\n    // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n    // defaults to the empty string. Rendered and parsed as an `<a>`\n    // element.\n    link: {\n      attrs: {\n        href: {},\n        title: { default: null },\n      },\n      inclusive: false,\n      parseDOM: [\n        {\n          tag: 'a[href]',\n          getAttrs(p) {\n            const dom = p as HTMLElement\n            return {\n              href: dom.getAttribute('href'),\n              title: dom.getAttribute('title'),\n            }\n          },\n        },\n      ],\n      toDOM(node) {\n        const { href, title } = node.attrs\n        return ['a', { href, title }, 0]\n      },\n    },\n\n    // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n    // Has parse rules that also match `<i>` and `font-style: italic`.\n    italic: {\n      parseDOM: [{ tag: 'i' }, { tag: 'em' }, { style: 'font-style=italic' }],\n      toDOM() {\n        return ['em', 0]\n      },\n    },\n\n    // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n    // also match `<b>` and `font-weight: bold`.\n    bold: {\n      parseDOM: [\n        { tag: 'strong' },\n        // This works around a Google Docs misbehavior where\n        // pasted content will be inexplicably wrapped in `<b>`\n        // tags with a font-weight normal.\n        {\n          tag: 'b',\n          getAttrs: (p) => {\n            const node = p as HTMLElement\n            return node.style.fontWeight != 'normal' && null\n          },\n        },\n        {\n          style: 'font-weight',\n          getAttrs: (p) => {\n            const value = p as string\n            return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n          },\n        },\n      ],\n      toDOM() {\n        return ['strong', 0]\n      },\n    },\n\n    // :: MarkSpec Code font mark. Represented as a `<code>` element.\n    code: {\n      parseDOM: [{ tag: 'code' }],\n      toDOM() {\n        return ['code', 0]\n      },\n    },\n\n    strikethrough: {\n      parseDOM: [\n        { tag: 's' },\n        { tag: 'strike' },\n        { style: 'text-decoration=line-through' },\n        { style: 'text-decoration-line=line-through' },\n      ],\n      toDOM: () => ['s'],\n    },\n\n    ychange: {\n      attrs: {\n        user: { default: null },\n        type: { default: null },\n        color: { default: null }\n      },\n      inclusive: false,\n      parseDOM: [{ tag: 'ychange' }],\n      toDOM (node) {\n        return ['ychange', {\n          ychange_user: node.attrs.user,\n          ychange_type: node.attrs.type,\n          style: calcYChangeStyle(node.attrs),\n          ychange_color: node.attrs.color.light\n        }, ...hoverWrapper(node.attrs, [0])]\n      }\n    }\n  },\n})\n\nconst calcYChangeStyle = (ychange: any) => {\n  switch (ychange.type) {\n    case 'removed':\n      return `color:${ychange.color.dark}`\n    case 'added':\n      return `background-color:${ychange.color.light}`\n    case null:\n      return ''\n  }\n}\n\nconst hoverWrapper = (ychange: any, els: any[]) =>\n  ychange === null ? els : [\n    [\n      'span',\n      {\n        class: 'ychange-hover',\n        style: `background-color:${ychange.color.dark}`\n      },\n      ychange.user || 'Unknown'\n    ],\n    ['span', ...els]\n  ]\n","import { exampleSetup } from 'prosemirror-example-setup'\nimport { keymap } from 'prosemirror-keymap'\nimport { ySyncPlugin, yCursorPlugin, yUndoPlugin, undo, redo } from 'y-prosemirror'\n\nimport { EditorContext } from 'pm/context/EditorContext'\nimport { schema } from './schema'\n\nexport const plugins = (ctx: EditorContext) =>\n  [\n    ySyncPlugin(ctx.yjsProvider.yXmlFragment, {\n      permanentUserData: ctx.yjsProvider.permanentUserData,\n      colors: [\n        { light: '#ecd44433', dark: '#ecd444' },\n        { light: '#ee635233', dark: '#ee6352' },\n        { light: '#6eeb8333', dark: '#6eeb83' }\n      ]\n    }),\n    yCursorPlugin(ctx.yjsProvider.provider.awareness),\n    yUndoPlugin(),\n    keymap({\n      'Mod-z': undo,\n      'Mod-y': redo,\n      'Mod-Shift-z': redo\n    }),\n  ].concat(exampleSetup({ schema, history: false }))\n","import React, { useLayoutEffect, useRef } from 'react'\nimport { EditorView } from 'prosemirror-view'\nimport { EditorState, Transaction } from 'prosemirror-state'\n\nimport { schema } from './schema'\n\nimport { plugins } from './plugins'\n\nimport { EditorContext, useEditorContext } from './context/EditorContext'\nimport { IProviders } from './context/Providers'\n\nimport './editor.css'\nimport './prosemirror-example-setup.css'\nimport './menu.css'\nimport './yjs.css'\n\ninterface EditorProps {\n  className?: string\n  onEditorReady?: (providers: IProviders) => void\n  onEdit?: (state: EditorState) => void\n}\n\nexport function PMEditor(props: EditorProps) {\n  const { className = '' } = props\n  const editorViewRef = useRef(null)\n  const editorRef = useRef<EditorView | null>(null)\n  const ctx = useEditorContext()\n\n  useLayoutEffect(() => {\n    ctx.yjsProvider.init()\n    const state = createEditorState(ctx)\n    const editorViewDOM = editorViewRef.current\n    if (editorViewDOM) {\n      editorRef.current = createEditorView(editorViewDOM, state)\n      ctx.viewProvider.init(editorRef.current)\n      props.onEditorReady && props?.onEditorReady(ctx)\n    }\n    return () => {\n      editorRef.current?.destroy()\n    }\n  }, [])\n\n  function createEditorState(ctx: EditorContext) {\n    return EditorState.create({\n      schema,\n      plugins: plugins(ctx)\n    })\n  }\n\n  function createEditorView(element: HTMLDivElement, state: EditorState) {\n    const view = new EditorView({ mount: element }, {\n      state,\n      dispatchTransaction,\n    })\n    // @ts-ignore\n    if (window) window.editorView = view\n    return view\n  }\n\n  function dispatchTransaction(transaction: Transaction) {\n    if (!editorRef.current) {\n      return\n    }\n    const oldEditorState = editorRef.current.state\n    const editorState = oldEditorState.apply(transaction)\n    editorRef.current.updateState(editorState)\n    if (props.onEdit) {\n      props.onEdit(editorState)\n    }\n  }\n\n  return (\n    <div id=\"example-editor\" ref={editorViewRef} className={className}/>\n  )\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { applyDevTools } from 'prosemirror-dev-tools'\n\nimport { Toolbar } from '../Toolbar'\nimport { RightPanel } from './RightPanel'\n\nimport { PMEditor } from 'pm/PMEditor'\nimport { ReactEditorContext } from 'pm/context/EditorContext'\nimport { createDefaultProviders, IProviders } from 'pm/context/Providers'\n\nexport function Editor() {\n  const editorProviders = useMemo(() => createDefaultProviders(), [])\n\n  function handleEditorReady(ctx: IProviders) {\n    applyDevTools(ctx.viewProvider.view)\n  }\n  return (\n    <ReactEditorContext.Provider value={editorProviders}>\n      <div>\n        <ViewGrid>\n          <LeftSide>\n            <Toolbar className=\"toolbar 'full-width\"/>\n            <div className=\"pm-editor full-width\">\n              <PMEditor\n                onEditorReady={handleEditorReady}\n              />\n            </div>\n          </LeftSide>\n          <RightPanel/>\n        </ViewGrid>\n      </div>\n    </ReactEditorContext.Provider>\n  )\n}\n\nconst ViewGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: auto auto;\n  margin-top: 1rem;\n`\nconst LeftSide = styled.div`\n  margin-right: 1rem;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Editor } from '../components/editor/Editor'\n\nexport function FrontPage() {\n  return (\n    <Container>\n      <header>\n        <h1><a href=\"https://teemukoivisto.github.io/pm-node-attrs-yjs-snapshots/\">\n          ProseMirror node attributes persistence with Yjs snapshots</a></h1>\n        <p>Somehow I can't get them to work</p>\n        <p><a href=\"https://github.com/TeemuKoivisto/pm-node-attrs-yjs-snapshots\">Github repo</a></p>\n      </header>\n      <Editor/>\n    </Container>\n  )\n}\n\nconst Container = styled.div``\n","import * as React from 'react'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport { WrappedRoute } from './components/WrappedRoute'\n\nimport { FrontPage } from './pages/FrontPage'\n\nexport const Routes = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <WrappedRoute exact path=\"/\" component={FrontPage}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n)\n","import * as React from 'react'\nimport { render } from 'react-dom'\n\nimport { Routes } from './routes'\n\nimport './index.css'\n\nrender(\n  <Routes />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}