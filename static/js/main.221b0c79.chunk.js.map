{"version":3,"sources":["components/NavBar.tsx","components/WrappedRoute.tsx","pm/context/EditorViewProvider.ts","../../../clones/y-prosemirror/src/plugins/keys.js","pm/Observable.ts","pm/context/SnapshotProvider.ts","pm/context/snapshots.ts","pm/context/YjsProvider.ts","pm/context/Providers.ts","pm/context/EditorContext.ts","components/Toolbar.tsx","pm/commands.ts","components/editor/ChangesControls.tsx","components/editor/SnapshotsList.tsx","pm/react/useSnapshotProvider.ts","components/editor/RightPanel.tsx","pm/schema.ts","../../../clones/y-prosemirror/src/lib.js","../../../clones/y-prosemirror/src/plugins/sync-plugin.js","../../../clones/y-prosemirror/src/plugins/cursor-plugin.js","../../../clones/y-prosemirror/src/plugins/undo-plugin.js","pm/plugins.ts","pm/PMEditor.tsx","components/editor/Editor.tsx","pages/FrontPage.tsx","routes.tsx","index.tsx"],"names":["NavBar","props","className","Container","Nav","Link","to","exact","activeClassName","styled","div","nav","NavLink","WrappedRoute","Component","component","rest","render","MainWrapper","MainContainer","main","EditorViewProvider","_view","view","this","Error","cmd","state","dispatch","focus","hasFocus","tr","scrollIntoView","toJSON","plugins","rawValue","EditorState","fromJSON","schema","updateState","ySyncPluginKey","PluginKey","yUndoPluginKey","yCursorPluginKey","Observable","_observers","Map","key","cb","current","get","set","Set","add","observers","delete","size","args","Array","from","values","forEach","SnapshotProvider","viewProvider","yjsProvider","_observable","snapshots","Y","selectedSnapshot","onInit","self","ydoc","getArray","observe","callback","updateVersions","unobserve","versions","emit","prevVersion","length","console","info","ysnap","clientID","prevSnapshot","snapshot","prevVersionID","sv","push","date","Date","getTime","snap","log","resumeEditing","ySnapshot","prevYSnapshot","foundPrevVersion","s","binding","getState","renderSnapshot","v","i","unrenderSnapshot","on","off","testUsers","username","color","lightColor","YjsProvider","_ydoc","_permanentUserData","_provider","_yXmlFragment","user","Math","floor","random","setUserMapping","gc","WebsocketProvider","getXmlFragment","createDefaultProviders","snapshotProvider","ReactEditorContext","createContext","useEditorContext","useContext","commandIcons","title","icon","Toolbar","IconList","map","item","IconItem","IconButton","onClick","execCommand","cursor","selection","head","blockNodePos","doc","resolve","start","node","nodeAt","attrs","makeMeRed","setNodeMarkup","undefined","handleIconClick","li","button","ChangesControls","createSnapshot","SnapshotsList","useState","isVisible","setIsVisible","snapshotsState","setState","useEffect","newState","onUpdate","offUpdate","useSnapshotProvider","Header","Title","List","SnapListItem","TitleWrapper","Buttons","inspectSnapshot","handleInspectSnapshot","deleteSnapshot","handleDeleteSnapshot","toLocaleString","h3","ul","RightPanel","RightSide","Schema","nodes","content","paragraph","default","group","parseDOM","tag","toDOM","el","style","blockquote","defining","horizontal_rule","heading","level","code_block","marks","code","preserveWhitespace","text","image","inline","src","alt","draggable","getAttrs","p","dom","getAttribute","hard_break","selectable","link","href","inclusive","italic","bold","fontWeight","test","strikethrough","ychange","type","ychange_user","ychange_type","calcYChangeStyle","ychange_color","light","hoverWrapper","dark","els","class","viewsToUpdate","updateMetas","ups","metas","val","setMeta","value","eventloop","absolutePositionToRelativePosition","pos","mapping","n","_first","_length","_item","next","parent","pNodeSize","nodeSize","id","error","constructor","createRelativePosition","typeid","tname","client","clock","relativePositionToAbsolutePosition","y","documentType","relPos","decodedPos","index","deleted","t","right","contentType","has","ds","defaultColors","getUserColor","colorMapping","colors","usedColors","filter","ySyncPlugin","yXmlFragment","permanentUserData","changedInitialContent","plugin","Plugin","editable","syncState","init","initargs","isChangeOrigin","apply","pluginState","change","getMeta","Object","assign","setTimeout","restore","_renderSnapshot","_prosemirrorChanged","prosemirrorView","ProsemirrorBinding","_forceRerender","update","findDiffStart","createAndFill","destroy","getRelativeSelection","pmbinding","anchor","mux","createMutex","_observeFunction","_typeChanged","bind","beforeTransactionSelection","beforeAllTransactions","afterAllTransactions","observeDeep","_domSelectionInView","environment","_isDomSelectionInView","_root","getSelection","range","createRange","setStart","anchorNode","anchorOffset","setEnd","focusNode","focusOffset","getClientRects","startContainer","collapsed","selectNodeContents","bounding","getBoundingClientRect","documentElement","bottom","left","window","innerWidth","clientWidth","top","innerHeight","clientHeight","fragmentContent","toArray","createNodeFromYElement","replace","PModel","transact","transaction","pud","dss","computeYChange","getUserByClientId","getUserByDeletedId","events","delType","_","deleteSet","struct","changed","changedParentTypes","createNodeIfNotExists","relSel","setSelection","TextSelection","create","restoreRelativeSelection","_isLocalCursorInView","updateYFragment","unobserveDeep","children","createChildren","ns","createTextNodesFromYText","textchild","getAttributes","nodeName","e","deltas","toDelta","delta","markName","attributes","mark","insert","createTypeFromElementNode","name","setAttribute","normalizePNodeContent","createTypeFromTextOrElementNode","marksToAttributes","applyDelta","createTypeFromTextNodes","isObject","equalAttrs","pattrs","yattrs","keys","eq","l","r","pnode","c","res","isText","textNodes","tnode","equalYTextPText","ytext","ptexts","every","d","object","equalYTypePNode","ytype","matchNodeName","normalizedContent","ychild","mappedIdentity","mapped","pcontent","a","computeChildEqualityFactor","yChildren","pChildren","pChildCnt","yChildCnt","minCnt","math","foundMappedChild","leftY","leftP","rightY","rightP","equalityFactor","updateYText","str","_start","nAttrs","countable","ytextTrans","simpleDiff","join","remove","retain","yDomFragment","pNode","yDomAttrs","pAttrs","removeAttribute","updateLeft","updateRight","equalityLeft","equalityRight","yDelLen","ins","yElement","defaultCursorBuilder","document","createElement","classList","userDiv","insertBefore","createTextNode","rxValidColor","createDecorations","awareness","createCursor","ystate","decorations","DecorationSet","getStates","aw","clientId","warn","maxsize","Decoration","widget","side","inclusiveEnd","inclusiveStart","yCursorPlugin","cursorBuilder","cursorStateField","prevState","oldState","yCursorState","awarenessUpdated","awarenessListener","docView","updateCursorInfo","getLocalState","setLocalStateField","addEventListener","removeEventListener","undo","undoManager","redo","yUndoPlugin","protectedNodes","trackedOrigins","UndoManager","concat","deleteFilter","Item","ContentType","Text","XmlElement","prevSel","hasUndoOps","undoStack","hasRedoOps","redoStack","stackItem","meta","ctx","provider","keymap","exampleSetup","history","PMEditor","editorViewRef","useRef","editorRef","dispatchTransaction","editorState","onEdit","useLayoutEffect","createEditorState","editorViewDOM","element","EditorView","mount","editorView","createEditorView","onEditorReady","ref","Editor","editorProviders","useMemo","Provider","ViewGrid","LeftSide","applyDevTools","FrontPage","Routes","basename","process","path","getElementById"],"mappings":"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","file":"static/js/main.221b0c79.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { RouteComponentProps } from 'react-router'\n\ninterface IProps extends RouteComponentProps<{}> {\n  className?: string\n}\n\nexport const NavBar = (props: IProps) => {\n  const { className} = props\n  return (\n    <Container className={className}>\n      <Nav>\n        <Link to=\"/\" exact activeClassName=\"current\">Front page</Link>\n      </Nav>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  background: var(--color-primary);\n  box-shadow: 0 0 2px 2px rgba(0,0,0,0.18);\n  padding: 1rem;\n`\nconst Nav = styled.nav`\n  align-items: center;\n  color: #fff;\n  display: flex;\n`\nconst Link = styled(NavLink)`\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  text-decoration: none;\n  transition: 0.2s hover;\n  &:hover {\n    text-decoration: underline;\n  }\n  &.current {\n    font-weight: 600;\n  }\n`\n","import * as React from 'react'\nimport { Route, RouteProps, RouteComponentProps } from 'react-router'\nimport styled from 'styled-components'\n\nimport { NavBar } from './NavBar'\n\ntype ReactComponent = React.ComponentClass<any> | React.StatelessComponent<any>\n\ninterface IWrappedRoute extends RouteProps {\n  component: ReactComponent\n}\n\nconst renderNoMainContainerWrapper = (Component: ReactComponent) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <Component {...props}/>\n  </MainWrapper>\n\nconst renderWrapper = (Component: ReactComponent) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <MainContainer>\n      <Component {...props}/>\n    </MainContainer>\n  </MainWrapper>\n\nexport const NoMainContainerRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderNoMainContainerWrapper(component)}/>\n\nexport const WrappedRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderWrapper(component)}/>\n\nconst MainWrapper = styled.div`\n  min-height: 100vh;\n`\nconst MainContainer = styled.main`\n  margin: 40px auto 0 auto;\n  max-width: 800px;\n  padding-bottom: 20px;\n  @media only screen and (max-width: 720px) {\n    margin: 40px 20px 0 20px;\n    padding-bottom: 20px;\n  }\n`\n","import { EditorView } from 'prosemirror-view'\nimport { EditorState } from 'prosemirror-state'\nimport { ExampleSchema } from '../schema'\n\nimport { Command, JSONEditorState } from '../editor-types'\n\nexport class EditorViewProvider {\n\n  _view?: EditorView<ExampleSchema>\n\n  init(view: EditorView<ExampleSchema>) {\n    this._view = view\n  }\n\n  get view(): EditorView<ExampleSchema> {\n    if (!this._view) {\n      throw Error('EditorViewProvider view accessed without EditorView instance')\n    }\n    return this._view\n  }\n\n  execCommand(cmd: Command) {\n    cmd(this.view.state, this.view.dispatch)\n    this.focus()\n  }\n\n  focus() {\n    if (!this._view || this._view.hasFocus()) {\n      return false\n    }\n    this._view.focus()\n    this._view.dispatch(this._view.state.tr.scrollIntoView())\n    return true\n  }\n  \n  stateToJSON() {\n    const state = this.view.state.toJSON()\n    return { ...state, plugins: [] } as unknown as JSONEditorState\n  }\n\n  hydrateStateFromJSON(rawValue: Object) {\n    const state = EditorState.fromJSON({\n      schema: this.view.state.schema,\n      plugins: this.view.state.plugins,\n    }, rawValue)\n\n    this.view.updateState(state)\n    // Fire an empty transaction to trigger PluginStateProvider to update\n    this.view.dispatch(this.view.state.tr)\n  }\n\n  replaceState(state: EditorState) {\n    this.view.updateState(state)\n    this.view.dispatch(this.view.state.tr)\n  }\n}","\nimport { PluginKey } from 'prosemirror-state' // eslint-disable-line\n\n/**\n * The unique prosemirror plugin key for syncPlugin\n *\n * @public\n */\nexport const ySyncPluginKey = new PluginKey('y-sync')\n\n/**\n * The unique prosemirror plugin key for undoPlugin\n *\n * @public\n */\nexport const yUndoPluginKey = new PluginKey('y-undo')\n\n/**\n * The unique prosemirror plugin key for cursorPlugin\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n","/**\n * Modified from https://github.com/dmonad/lib0/blob/main/observable.js\n */\nexport class Observable<K = string> {\n  _observers = new Map<K, Set<(args: any[]) => void>>()\n\n  on(key: K, cb: (...args: any[]) => void) {\n    const current = this._observers.get(key)\n    if (current) {\n      this._observers.set(key, new Set(current.add(cb)))\n    } else {\n      this._observers.set(key, new Set([cb]))\n    }\n  }\n\n  off(key: K, cb: (...args: any[]) => void) {\n    const observers = this._observers.get(key)\n    if (observers) {\n      observers.delete(cb)\n      if (observers.size === 0) {\n        this._observers.delete(key)\n      }\n    }\n  }\n\n  emit(key: K, ...args: any[]) {\n    // TODO the typing of this annoying thing\n    // @ts-ignore\n    return Array.from((this._observers.get(key) || new Set()).values()).forEach(cb => cb(...args))\n  }\n\n  destroy() {\n    this._observers = new Map()\n  }\n}","import * as Y from 'yjs'\nimport { ySyncPluginKey, ProsemirrorBinding } from 'y-prosemirror'\n\nimport { EditorViewProvider } from './EditorViewProvider'\nimport { YjsProvider } from './YjsProvider'\nimport { Observable } from '../Observable'\n\nimport { Snapshot, createSnapshot } from './snapshots'\n\nexport interface SnapshotProviderState {\n  snapshots: Y.Array<Snapshot>\n  selectedSnapshot: Snapshot | null\n}\n\nexport class SnapshotProvider {\n\n  _observable = new Observable<'update'>()\n  viewProvider: EditorViewProvider\n  yjsProvider: YjsProvider\n\n  snapshots: Y.Array<Snapshot> = new Y.Array()\n  selectedSnapshot: Snapshot | null = null\n\n  constructor(viewProvider: EditorViewProvider, yjsProvider: YjsProvider) {\n    this.viewProvider = viewProvider\n    this.yjsProvider = yjsProvider\n    yjsProvider.onInit(() => {\n      // This is so ridiculous\n      // But the reason is that the versions is updated async as it's fetched from the server\n      // (or loaded from indexedDB) so this is the only way to get correctly notified when that happens.\n      // Actually, I might have to keep the observer now that I think of it...\n      const self = this\n      yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions').observe(function callback() {\n        self.updateVersions()\n        yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions').unobserve(callback)\n      })\n    })\n  }\n\n  get state() : SnapshotProviderState {\n    return {\n      snapshots: this.snapshots,\n      selectedSnapshot: this.selectedSnapshot,\n    }\n  }\n\n  updateVersions() {\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    this.snapshots = versions\n    this._observable.emit('update', this.state)\n  }\n\n  createSnapshot() {\n    const ydoc = this.yjsProvider.ydoc\n    const versions = ydoc.getArray<Snapshot>('pm-doc-versions')\n    const prevVersion = versions.length === 0 ? null : versions.get(versions.length - 1)\n    console.info(prevVersion)\n    const prevSnapshot = prevVersion === null ? Y.emptySnapshot : Y.decodeSnapshot(prevVersion.snapshot)\n    const snapshot = Y.snapshot(ydoc)\n    console.info('created snapshot', snapshot)\n    if (prevVersion != null) {\n      // account for the action of adding a version to ydoc\n      const prevVersionID = prevSnapshot.sv.get(prevVersion.clientID)\n      if (!prevVersionID) {\n        throw Error('Yjs prevVersionID was undefined!')\n      }\n      prevSnapshot.sv.set(prevVersion.clientID, prevVersionID + 1)\n    }\n    if (!Y.equalSnapshots(prevSnapshot, snapshot)) {\n      versions.push([createSnapshot(snapshot, ydoc.clientID)])\n      this.updateVersions()\n    }\n  }\n\n  inspectSnapshot(snap: Snapshot | undefined) {\n    console.log('snap', snap)\n    if (!snap || this.selectedSnapshot?.date === snap.date) {\n      return this.resumeEditing()\n    }\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    const ySnapshot = Y.decodeSnapshot(snap.snapshot)\n    console.log('inspect snapshot', ySnapshot)\n    let prevYSnapshot: Y.Snapshot = Y.emptySnapshot, foundPrevVersion = false\n    versions.forEach((s => {\n      if (s.date === snap.date) {\n        foundPrevVersion = true\n      } else if (!foundPrevVersion) {\n        prevYSnapshot = Y.decodeSnapshot(s.snapshot)\n      }\n    }))\n    const binding: ProsemirrorBinding | null = ySyncPluginKey.getState(this.viewProvider.view.state).binding\n    if (binding) {\n      binding.renderSnapshot(ySnapshot, prevYSnapshot)\n    }\n    this.selectedSnapshot = snap\n    this._observable.emit('update', this.state)\n  }\n\n  deleteSnapshot(snap: Snapshot) {\n    const versions = this.yjsProvider.ydoc.getArray<Snapshot>('pm-doc-versions')\n    versions.forEach((v, i) => {\n      if (v.date === snap.date) {\n        versions.delete(i)\n        this._observable.emit('update', this.state)\n      }\n    })\n  }\n\n  resumeEditing() {\n    const binding: ProsemirrorBinding | null = ySyncPluginKey.getState(this.viewProvider.view.state).binding\n    if (binding) {\n      binding.unrenderSnapshot()\n    }\n    this.selectedSnapshot = null\n    this._observable.emit('update', this.state)\n  }\n\n  onUpdate(cb: (data: any) => void) {\n    this._observable.on('update', cb)\n  }\n\n  offUpdate(cb: (data: any) => void) {\n    this._observable.off('update', cb)\n  }\n}\n","import * as Y from 'yjs'\n\nexport interface Snapshot {\n  date: number\n  snapshot: Uint8Array\n  clientID: number\n}\n\nexport function createSnapshot(ysnap: Y.Snapshot, clientID: number): Snapshot {\n  return {\n    date: new Date().getTime(),\n    snapshot: Y.encodeSnapshot(ysnap),\n    clientID,\n  }\n}","import * as Y from 'yjs'\nimport { WebsocketProvider } from 'y-websocket'\n\nimport { EditorViewProvider } from './EditorViewProvider'\nimport { Observable } from '../Observable'\n\nconst testUsers = [\n  { username: 'Alice', color: '#ecd444', lightColor: '#ecd44433' },\n  { username: 'Bob', color: '#ee6352', lightColor: '#ee635233' },\n  { username: 'Max', color: '#6eeb83', lightColor: '#6eeb8333' }\n]\n\nexport class YjsProvider {\n\n  _observable = new Observable<'init'>()\n  viewProvider: EditorViewProvider\n\n  _ydoc?: Y.Doc\n  _permanentUserData?: Y.PermanentUserData\n  _provider?: WebsocketProvider\n  _yXmlFragment?: Y.XmlFragment\n\n  constructor(viewProvider: EditorViewProvider) {\n    this.viewProvider = viewProvider\n  }\n\n  get ydoc() {\n    if (!this._ydoc) throw Error('YjsProvider ydoc accessed without initialization!')\n    return this._ydoc\n  }\n\n  get provider() {\n    if (!this._provider) throw Error('YjsProvider provider accessed without initialization!')\n    return this._provider\n  }\n\n  get yXmlFragment() {\n    if (!this._yXmlFragment) Error('YjsProvider yXmlFragment accessed without initialization!')\n    return this._yXmlFragment\n  }\n\n  get permanentUserData() {\n    if (!this._permanentUserData) Error('YjsProvider permanentUserData accessed without initialization!')\n    return this._permanentUserData\n  }\n\n  init() {\n    this._ydoc = new Y.Doc()\n    this._permanentUserData = new Y.PermanentUserData(this._ydoc)\n    const user = testUsers[Math.floor(Math.random() * 3)]\n    this._permanentUserData.setUserMapping(this._ydoc, this._ydoc.clientID, user.username)\n    this._ydoc.gc = false\n    this._provider = new WebsocketProvider('wss://demos.yjs.dev', 'prosemirror-versions-demo', this._ydoc)\n    this._yXmlFragment = this._ydoc.getXmlFragment('pm-doc')\n    this._observable.emit('init')\n  }\n\n  onInit(cb: (data: any) => void) {\n    this._observable.on('init', cb)\n  }\n\n  offInit(cb: (data: any) => void) {\n    this._observable.off('init', cb)\n  }\n}\n","import { EditorViewProvider } from './EditorViewProvider'\nimport { SnapshotProvider } from './SnapshotProvider'\nimport { YjsProvider } from './YjsProvider'\n\nexport { EditorViewProvider } from './EditorViewProvider'\nexport { SnapshotProvider } from './SnapshotProvider'\nexport { YjsProvider } from './YjsProvider'\n\nexport interface IProviders {\n  viewProvider: EditorViewProvider\n  snapshotProvider: SnapshotProvider\n  yjsProvider: YjsProvider\n}\n\nexport const createDefaultProviders = (): IProviders => {\n  const viewProvider = new EditorViewProvider()\n  const yjsProvider = new YjsProvider(viewProvider)\n  const snapshotProvider = new SnapshotProvider(viewProvider, yjsProvider)\n  return {\n    viewProvider,\n    snapshotProvider,\n    yjsProvider,\n  }\n}\n","import { createContext, useContext } from 'react'\nimport { IProviders, createDefaultProviders } from './Providers'\n\nexport type EditorContext = IProviders\n\nexport const ReactEditorContext = createContext<EditorContext>(createDefaultProviders())\n\nexport const useEditorContext = () => useContext(ReactEditorContext)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FiAtSign } from 'react-icons/fi'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\nimport { setBlockNodeAttribute } from 'pm/commands'\n\ninterface IProps {\n  className?: string\n}\n\ntype IconType = 'update-attribute'\n\nconst commandIcons: {\n  title: IconType\n  icon: React.ReactNode\n}[] = [\n  {\n    title: 'update-attribute',\n    icon: <FiAtSign size={16} />\n  },\n]\n\nexport function Toolbar(props: IProps) {\n  const { className } = props\n  const { viewProvider } = useEditorContext()\n\n  function handleIconClick(title: IconType) {\n    switch (title) {\n      case 'update-attribute':\n        viewProvider.execCommand(setBlockNodeAttribute())\n        return\n    }\n  }\n  return (\n    <Container className={className}>\n      <IconList>\n        {commandIcons.map(item =>\n          <IconItem key={item.title}>\n            <IconButton onClick={() => handleIconClick(item.title)}>\n              {item.icon}\n            </IconButton>\n          </IconItem>\n        )}\n      </IconList>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  background: var(--color-primary-lighter);\n  padding: 1rem;\n`\nconst IconList = styled.div`\n  align-items: center;\n  color: #fff;\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`\nconst IconItem = styled.li`\n  & + & {\n    margin-left: 1rem;\n  }\n`\nconst IconButton = styled.button`\n  align-items: center;\n  background: transparent;\n  border: 0;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  padding: 0.25rem;\n  &:hover {\n    background: rgba(255, 255, 255, 0.7);\n    opacity: 0.7;\n  }\n  &.active {\n    background: rgb(215 227 255);\n    box-shadow: 0 0 2px 2px rgb(0 0 0 / 18%);\n  }\n`\n","import type { Command } from './editor-types'\n\nexport const setBlockNodeAttribute = () : Command => (state, dispatch) => {\n  const cursor = state.selection.head\n  const blockNodePos = state.doc.resolve(cursor).start(1) - 1\n  const node = state.doc.nodeAt(blockNodePos)\n  let tr\n  if (node?.attrs.makeMeRed) {\n    tr = state.tr.setNodeMarkup(blockNodePos, undefined, { makeMeRed: false })\n  } else {\n    tr = state.tr.setNodeMarkup(blockNodePos, undefined, { makeMeRed: true })\n  }\n  if (dispatch) {\n    dispatch(tr)\n    return true\n  }\n  return false\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\n\ninterface IProps {\n  className?: string\n}\n\nexport function ChangesControls(props: IProps) {\n  const { className } = props\n  const { snapshotProvider } = useEditorContext()\n\n  function handleSnapshot() {\n    snapshotProvider.createSnapshot()\n  }\n  return (\n    <Container className={className}>\n      <button onClick={() => handleSnapshot()}>\n        Snapshot\n      </button>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  button {\n    margin: 0.05rem;\n  }\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi'\n\nimport { useEditorContext } from 'pm/context/EditorContext'\nimport { useSnapshotProvider } from 'pm/react/useSnapshotProvider'\n\nimport { Snapshot } from 'pm/context/snapshots'\n\ninterface IProps {\n  className?: string\n}\n\nexport function SnapshotsList(props: IProps) {\n  const { className } = props\n  const [isVisible, setIsVisible] = useState(true)\n  const { snapshotProvider } = useEditorContext()\n  const snapshotsState = useSnapshotProvider()\n\n  function handleInspectSnapshot(snap: Snapshot) {\n    snapshotProvider.inspectSnapshot(snap)\n  }\n  function handleResumeEditing() {\n    snapshotProvider.resumeEditing()\n  }\n  function handleDeleteSnapshot(snap: Snapshot) {\n    snapshotProvider.deleteSnapshot(snap)\n  }\n  return (\n    <>\n    <Header>\n      <button onClick={() => setIsVisible(!isVisible)} className=\"header-btn\">\n        <span>{ isVisible ? <FiChevronDown size={16}/> : <FiChevronRight size={16}/>}</span>\n        <Title>Snapshots</Title>\n      </button>\n      <button\n        className={`inspect-btn ${snapshotsState.selectedSnapshot ? '' : 'hidden'}`}\n        onClick={() => handleResumeEditing()}\n      >\n        Stop inspecting\n      </button>\n    </Header>\n    <List className={`${className} ${isVisible ? '' : 'hidden'}`}>\n      { snapshotsState?.snapshots.map((snap: Snapshot, i: number) =>\n      <SnapListItem\n        key={`${snap.date}-${i}`}\n      >\n        <TitleWrapper>\n          <h4>Snapshot {i + 1}</h4>\n          <Buttons>\n            <button onClick={() => handleInspectSnapshot(snap)}>\n              Inspect\n            </button>\n            <button onClick={() => handleDeleteSnapshot(snap)}>\n              Delete\n            </button>\n          </Buttons>\n        </TitleWrapper>\n        <small>{new Date(snap.date).toLocaleString()}</small>\n      </SnapListItem>\n      )}\n    </List>\n    </>\n  )\n}\n\nconst Header = styled.div`\n  align-items: center;\n  display: flex;\n  margin: 1rem 0 0.5rem 0;\n  & > .header-btn {\n    align-items: center;\n    background: transparent;\n    border: 0;\n    cursor: pointer;\n    display: flex;\n    margin: 0;\n    padding: 0;\n  }\n  & > .inspect-btn {\n    margin-left: 1rem;\n  }\n  .hidden {\n    visibility: hidden;\n  }\n`\nconst Title = styled.h3`\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0 0 0 0.5rem;\n  text-transform: uppercase;\n`\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin: 0;\n  max-height: 300px;\n  overflow-y: scroll;\n  padding: 0;\n  &.hidden {\n    display: none;\n    visibility: hidden;\n  }\n  & > li:nth-child(odd) {\n    background: #f3f3f3;\n  }\n`\nconst SnapListItem = styled.li`\n  border-radius: 2px;\n  padding: 0.25rem;\n`\nconst TitleWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  & > h4 {\n    margin: 0;\n    margin-right: 1rem;\n  }\n`\nconst Buttons = styled.div`\n  display: flex;\n  margin: 0.25rem 0;\n  button + button {\n    margin-left: 0.5rem;\n  }\n`\n","import { useState, useEffect } from 'react'\n\nimport { useEditorContext } from '../context/EditorContext'\nimport type { SnapshotProviderState } from 'pm/context/SnapshotProvider'\n\nexport function useSnapshotProvider() {\n  const { snapshotProvider } = useEditorContext()\n\n  const [state, setState] = useState<SnapshotProviderState>(snapshotProvider.state)\n\n  useEffect(() => {\n    const cb = (newState: SnapshotProviderState) => {\n      setState(newState)\n    }\n    setState(snapshotProvider.state)\n    snapshotProvider.onUpdate(cb)\n    return () => {\n      snapshotProvider.offUpdate(cb)\n    }\n  }, [snapshotProvider])\n\n  return state\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { ChangesControls } from './ChangesControls'\nimport { SnapshotsList } from './SnapshotsList'\n\nexport function RightPanel() {\n  return (\n    <RightSide>\n      <ChangesControls className=\"changes-controls\"/>\n      <SnapshotsList />\n    </RightSide>\n  )\n}\n\nconst RightSide = styled.div``\n","import { Schema } from 'prosemirror-model'\n\nexport type Marks = 'bold' | 'code' | 'italic' | 'link' | 'strikethrough' | 'ychange'\nexport type Nodes =\n  | 'blockquote'\n  | 'code_block'\n  | 'doc'\n  | 'hard_break'\n  | 'heading'\n  | 'horizontal_rule'\n  | 'image'\n  | 'paragraph'\n  | 'text'\n\nexport type ExampleSchema = Schema<Nodes, Marks>\n\nexport const schema: ExampleSchema = new Schema<Nodes, Marks>({\n  nodes: {\n    // :: NodeSpec The top level document node.\n    doc: {\n      content: 'block+',\n    },\n\n    // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n    // as a `<p>` element.\n    paragraph: {\n      attrs: { makeMeRed: { default: null } },\n      content: 'inline*',\n      group: 'block',\n      parseDOM: [{ tag: 'p' }],\n      toDOM(el) {\n        const attrs = {\n          style: el.attrs.makeMeRed ? 'background: red;' : undefined\n        }\n        return ['p', attrs, 0]\n      },\n    },\n\n    // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n    blockquote: {\n      attrs: { makeMeRed: { default: null } },\n      content: 'block+',\n      group: 'block',\n      defining: true,\n      parseDOM: [{ tag: 'blockquote' }],\n      toDOM(el) {\n        const attrs = {\n          style: el.attrs.makeMeRed ? 'background: red;' : undefined\n        }\n        return ['blockquote', attrs, 0]\n      },\n    },\n\n    // :: NodeSpec A horizontal rule (`<hr>`).\n    horizontal_rule: {\n      group: 'block',\n      parseDOM: [{ tag: 'hr' }],\n      toDOM() {\n        return ['hr']\n      },\n    },\n\n    // :: NodeSpec A heading textblock, with a `level` attribute that\n    // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n    // `<h6>` elements.\n    heading: {\n      attrs: { level: { default: 1 } },\n      content: 'inline*',\n      group: 'block',\n      defining: true,\n      parseDOM: [\n        { tag: 'h1', attrs: { level: 1 } },\n        { tag: 'h2', attrs: { level: 2 } },\n        { tag: 'h3', attrs: { level: 3 } },\n        { tag: 'h4', attrs: { level: 4 } },\n        { tag: 'h5', attrs: { level: 5 } },\n        { tag: 'h6', attrs: { level: 6 } },\n      ],\n      toDOM(node) {\n        return ['h' + node.attrs.level, 0]\n      },\n    },\n\n    // :: NodeSpec A code listing. Disallows marks or non-text inline\n    // nodes by default. Represented as a `<pre>` element with a\n    // `<code>` element inside of it.\n    code_block: {\n      content: 'text*',\n      marks: '',\n      group: 'block',\n      code: true,\n      defining: true,\n      parseDOM: [{ tag: 'pre', preserveWhitespace: 'full' }],\n      toDOM() {\n        return ['pre', ['code', 0]]\n      },\n    },\n\n    // :: NodeSpec The text node.\n    text: {\n      group: 'inline',\n    },\n\n    // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n    // `alt`, and `href` attributes. The latter two default to the empty\n    // string.\n    image: {\n      inline: true,\n      attrs: {\n        src: {},\n        alt: { default: null },\n        title: { default: null },\n      },\n      group: 'inline',\n      draggable: true,\n      parseDOM: [\n        {\n          tag: 'img[src]',\n          getAttrs(p) {\n            const dom = p as HTMLElement\n            return {\n              src: dom.getAttribute('src'),\n              title: dom.getAttribute('title'),\n              alt: dom.getAttribute('alt'),\n            }\n          },\n        },\n      ],\n      toDOM(node) {\n        const { src, alt, title } = node.attrs\n        return ['img', { src, alt, title }]\n      },\n    },\n\n    // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n    hard_break: {\n      inline: true,\n      group: 'inline',\n      selectable: false,\n      parseDOM: [{ tag: 'br' }],\n      toDOM() {\n        return ['br']\n      },\n    },\n  },\n  marks: {\n    // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n    // defaults to the empty string. Rendered and parsed as an `<a>`\n    // element.\n    link: {\n      attrs: {\n        href: {},\n        title: { default: null },\n      },\n      inclusive: false,\n      parseDOM: [\n        {\n          tag: 'a[href]',\n          getAttrs(p) {\n            const dom = p as HTMLElement\n            return {\n              href: dom.getAttribute('href'),\n              title: dom.getAttribute('title'),\n            }\n          },\n        },\n      ],\n      toDOM(node) {\n        const { href, title } = node.attrs\n        return ['a', { href, title }, 0]\n      },\n    },\n\n    // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n    // Has parse rules that also match `<i>` and `font-style: italic`.\n    italic: {\n      parseDOM: [{ tag: 'i' }, { tag: 'em' }, { style: 'font-style=italic' }],\n      toDOM() {\n        return ['em', 0]\n      },\n    },\n\n    // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n    // also match `<b>` and `font-weight: bold`.\n    bold: {\n      parseDOM: [\n        { tag: 'strong' },\n        // This works around a Google Docs misbehavior where\n        // pasted content will be inexplicably wrapped in `<b>`\n        // tags with a font-weight normal.\n        {\n          tag: 'b',\n          getAttrs: (p) => {\n            const node = p as HTMLElement\n            return node.style.fontWeight != 'normal' && null\n          },\n        },\n        {\n          style: 'font-weight',\n          getAttrs: (p) => {\n            const value = p as string\n            return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n          },\n        },\n      ],\n      toDOM() {\n        return ['strong', 0]\n      },\n    },\n\n    // :: MarkSpec Code font mark. Represented as a `<code>` element.\n    code: {\n      parseDOM: [{ tag: 'code' }],\n      toDOM() {\n        return ['code', 0]\n      },\n    },\n\n    strikethrough: {\n      parseDOM: [\n        { tag: 's' },\n        { tag: 'strike' },\n        { style: 'text-decoration=line-through' },\n        { style: 'text-decoration-line=line-through' },\n      ],\n      toDOM: () => ['s'],\n    },\n\n    ychange: {\n      attrs: {\n        user: { default: null },\n        type: { default: null },\n        color: { default: null }\n      },\n      inclusive: false,\n      parseDOM: [{ tag: 'ychange' }],\n      toDOM (node) {\n        return ['ychange', {\n          ychange_user: node.attrs.user,\n          ychange_type: node.attrs.type,\n          style: calcYChangeStyle(node.attrs),\n          ychange_color: node.attrs.color.light\n        }, ...hoverWrapper(node.attrs, [0])]\n      }\n    }\n  },\n})\n\nconst calcYChangeStyle = (ychange: any) => {\n  switch (ychange.type) {\n    case 'removed':\n      return `color:${ychange.color.dark}`\n    case 'added':\n      return `background-color:${ychange.color.light}`\n    case null:\n      return ''\n  }\n}\n\nconst hoverWrapper = (ychange: any, els: any[]) =>\n  ychange === null ? els : [\n    [\n      'span',\n      {\n        class: 'ychange-hover',\n        style: `background-color:${ychange.color.dark}`\n      },\n      ychange.user || 'Unknown'\n    ],\n    ['span', ...els]\n  ]\n","import { updateYFragment} from './plugins/sync-plugin.js' // eslint-disable-line\nimport * as Y from 'yjs'\nimport { EditorView } from 'prosemirror-view' // eslint-disable-line\nimport { Node, Schema } from 'prosemirror-model' // eslint-disable-line\nimport * as error from 'lib0/error'\nimport * as map from 'lib0/map'\nimport * as eventloop from 'lib0/eventloop'\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, Node | Array<Node>>} ProsemirrorMapping\n */\n\n/**\n * Is null if no timeout is in progress.\n * Is defined if a timeout is in progress.\n * Maps from view\n * @type {Map<EditorView, Map<any, any>>|null}\n */\nlet viewsToUpdate = null\n\nconst updateMetas = () => {\n  const ups = /** @type {Map<EditorView, Map<any, any>>} */ (viewsToUpdate)\n  viewsToUpdate = null\n  ups.forEach((metas, view) => {\n    const tr = view.state.tr\n    metas.forEach((val, key) => {\n      tr.setMeta(key, val)\n    })\n    view.dispatch(tr)\n  })\n}\n\nexport const setMeta = (view, key, value) => {\n  if (!viewsToUpdate) {\n    viewsToUpdate = new Map()\n    eventloop.timeout(0, updateMetas)\n  }\n  map.setIfUndefined(viewsToUpdate, view, map.create).set(key, value)\n}\n\n/**\n * Transforms a Prosemirror based absolute position to a Yjs Cursor (relative position in the Yjs model).\n *\n * @param {number} pos\n * @param {Y.XmlFragment} type\n * @param {ProsemirrorMapping} mapping\n * @return {any} relative position\n */\nexport const absolutePositionToRelativePosition = (pos, type, mapping) => {\n  if (pos === 0) {\n    return Y.createRelativePositionFromTypeIndex(type, 0)\n  }\n  /**\n   * @type {any}\n   */\n  let n = type._first === null ? null : /** @type {Y.ContentType} */ (type._first.content).type\n  while (n !== null && type !== n) {\n    if (n instanceof Y.XmlText) {\n      if (n._length >= pos) {\n        return Y.createRelativePositionFromTypeIndex(n, pos)\n      } else {\n        pos -= n._length\n      }\n      if (n._item !== null && n._item.next !== null) {\n        n = /** @type {Y.ContentType} */ (n._item.next.content).type\n      } else {\n        do {\n          n = n._item === null ? null : n._item.parent\n          pos--\n        } while (n !== type && n !== null && n._item !== null && n._item.next === null)\n        if (n !== null && n !== type) {\n          // @ts-gnore we know that n.next !== null because of above loop conditition\n          n = n._item === null ? null : /** @type {Y.ContentType} */ (/** @type Y.Item */ (n._item.next).content).type\n        }\n      }\n    } else {\n      const pNodeSize = /** @type {any} */ (mapping.get(n) || { nodeSize: 0 }).nodeSize\n      if (n._first !== null && pos < pNodeSize) {\n        n = /** @type {Y.ContentType} */ (n._first.content).type\n        pos--\n      } else {\n        if (pos === 1 && n._length === 0 && pNodeSize > 1) {\n          // edge case, should end in this paragraph\n          return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n        }\n        pos -= pNodeSize\n        if (n._item !== null && n._item.next !== null) {\n          n = /** @type {Y.ContentType} */ (n._item.next.content).type\n        } else {\n          if (pos === 0) {\n            // set to end of n.parent\n            n = n._item === null ? n : n._item.parent\n            return new Y.RelativePosition(n._item === null ? null : n._item.id, n._item === null ? Y.findRootTypeKey(n) : null, null)\n          }\n          do {\n            n = /** @type {Y.Item} */ (n._item).parent\n            pos--\n          } while (n !== type && /** @type {Y.Item} */ (n._item).next === null)\n          // if n is null at this point, we have an unexpected case\n          if (n !== type) {\n            // We know that n._item.next is defined because of above loop condition\n            n = /** @type {Y.ContentType} */ (/** @type {Y.Item} */ (/** @type {Y.Item} */ (n._item).next).content).type\n          }\n        }\n      }\n    }\n    if (n === null) {\n      throw error.unexpectedCase()\n    }\n    if (pos === 0 && n.constructor !== Y.XmlText && n !== type) { // TODO: set to <= 0\n      return createRelativePosition(n._item.parent, n._item)\n    }\n  }\n  return Y.createRelativePositionFromTypeIndex(type, type._length)\n}\n\nconst createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = Y.findRootTypeKey(type)\n  } else {\n    typeid = Y.createID(type._item.id.client, type._item.id.clock)\n  }\n  return new Y.RelativePosition(typeid, tname, item.id)\n}\n\n/**\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} documentType Top level type that is bound to pView\n * @param {any} relPos Encoded Yjs based relative position\n * @param {ProsemirrorMapping} mapping\n * @return {null|number}\n */\nexport const relativePositionToAbsolutePosition = (y, documentType, relPos, mapping) => {\n  const decodedPos = Y.createAbsolutePositionFromRelativePosition(relPos, y)\n  if (decodedPos === null || (decodedPos.type !== documentType && !Y.isParentOf(documentType, decodedPos.type._item))) {\n    return null\n  }\n  let type = decodedPos.type\n  let pos = 0\n  if (type.constructor === Y.XmlText) {\n    pos = decodedPos.index\n  } else if (type._item === null || !type._item.deleted) {\n    let n = type._first\n    let i = 0\n    while (i < type._length && i < decodedPos.index && n !== null) {\n      if (!n.deleted) {\n        const t = /** @type {Y.ContentType} */ (n.content).type\n        i++\n        if (t instanceof Y.XmlText) {\n          pos += t._length\n        } else {\n          pos += /** @type {any} */ (mapping.get(t)).nodeSize\n        }\n      }\n      n = /** @type {Y.Item} */ (n.right)\n    }\n    pos += 1 // increase because we go out of n\n  }\n  while (type !== documentType && type._item !== null) {\n    // @ts-ignore\n    const parent = type._item.parent\n    // @ts-ignore\n    if (parent._item === null || !parent._item.deleted) {\n      pos += 1 // the start tag\n      let n = /** @type {Y.AbstractType} */ (parent)._first\n      // now iterate until we found type\n      while (n !== null) {\n        const contentType = /** @type {Y.ContentType} */ (n.content).type\n        if (contentType === type) {\n          break\n        }\n        if (!n.deleted) {\n          if (contentType instanceof Y.XmlText) {\n            pos += contentType._length\n          } else {\n            pos += /** @type {any} */ (mapping.get(contentType)).nodeSize\n          }\n        }\n        n = n.right\n      }\n    }\n    type = /** @type {Y.AbstractType} */ (parent)\n  }\n  return pos - 1 // we don't count the most outer tag, because it is a fragment\n}\n\n/**\n * Utility method to convert a Prosemirror Doc Node into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Node} doc\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorToYDoc (doc, xmlFragment = 'prosemirror') {\n  const ydoc = new Y.Doc()\n  const type = /** @type {Y.XmlFragment} */ (ydoc.get(xmlFragment, Y.XmlFragment))\n  if (!type.doc) {\n    return ydoc\n  }\n\n  updateYFragment(type.doc, type, doc, new Map())\n  return type.doc\n}\n\n/**\n * Utility method to convert Prosemirror compatible JSON into a Y.Doc.\n *\n * This can be used when importing existing content to Y.Doc for the first time,\n * note that this should not be used to rehydrate a Y.Doc from a database once\n * collaboration has begun as all history will be lost\n *\n * @param {Schema} schema\n * @param {any} state\n * @param {string} xmlFragment\n * @return {Y.Doc}\n */\nexport function prosemirrorJSONToYDoc (schema, state, xmlFragment = 'prosemirror') {\n  const doc = Node.fromJSON(schema, state)\n  return prosemirrorToYDoc(doc, xmlFragment)\n}\n\n/**\n * Utility method to convert a Y.Doc to a Prosemirror Doc node.\n *\n * @param {Schema} schema\n * @param {Y.Doc} ydoc\n * @return {Node}\n */\nexport function yDocToProsemirror (schema, ydoc) {\n  const state = yDocToProsemirrorJSON(ydoc)\n  return Node.fromJSON(schema, state)\n}\n\n/**\n * Utility method to convert a Y.Doc to Prosemirror compatible JSON.\n *\n * @param {Y.Doc} ydoc\n * @param {string} xmlFragment\n * @return {Record<string, any>}\n */\nexport function yDocToProsemirrorJSON (\n  ydoc,\n  xmlFragment = 'prosemirror'\n) {\n  const items = ydoc.getXmlFragment(xmlFragment).toArray()\n\n  function serialize (item) {\n    /**\n     * @type {Object} NodeObject\n     * @property {string} NodeObject.type\n     * @property {Record<string, string>=} NodeObject.attrs\n     * @property {Array<NodeObject>=} NodeObject.content\n     */\n    let response\n\n    // TODO: Must be a better way to detect text nodes than this\n    if (!item.nodeName) {\n      const delta = item.toDelta()\n      response = delta.map((d) => {\n        const text = {\n          type: 'text',\n          text: d.insert\n        }\n\n        if (d.attributes) {\n          text.marks = Object.keys(d.attributes).map((type) => {\n            const attrs = d.attributes[type]\n            const mark = {\n              type\n            }\n\n            if (Object.keys(attrs)) {\n              mark.attrs = attrs\n            }\n\n            return mark\n          })\n        }\n        return text\n      })\n    } else {\n      response = {\n        type: item.nodeName\n      }\n\n      const attrs = item.getAttributes()\n      if (Object.keys(attrs).length) {\n        response.attrs = attrs\n      }\n\n      const children = item.toArray()\n      if (children.length) {\n        response.content = children.map(serialize).flat()\n      }\n    }\n\n    return response\n  }\n\n  return {\n    type: 'doc',\n    content: items.map(serialize)\n  }\n}\n","/**\n * @module bindings/prosemirror\n */\n\nimport { createMutex } from 'lib0/mutex'\nimport * as PModel from 'prosemirror-model'\nimport { Plugin, TextSelection } from 'prosemirror-state' // eslint-disable-line\nimport * as math from 'lib0/math'\nimport * as object from 'lib0/object'\nimport * as set from 'lib0/set'\nimport { simpleDiff } from 'lib0/diff'\nimport * as error from 'lib0/error'\nimport { ySyncPluginKey } from './keys.js'\nimport * as Y from 'yjs'\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition } from '../lib.js'\nimport * as random from 'lib0/random'\nimport * as environment from 'lib0/environment'\nimport * as dom from 'lib0/dom'\n\n/**\n * @param {Y.Item} item\n * @param {Y.Snapshot} [snapshot]\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (snapshot.sv.has(item.id.client) && /** @type {number} */ (snapshot.sv.get(item.id.client)) > item.id.clock && !Y.isDeleted(snapshot.ds, item.id))\n\n/**\n * Either a node if type is YXmlElement or an Array of text nodes if YXmlText\n * @typedef {Map<Y.AbstractType, PModel.Node | Array<PModel.Node>>} ProsemirrorMapping\n */\n\n/**\n * @typedef {Object} ColorDef\n * @property {string} ColorDef.light\n * @property {string} ColorDef.dark\n */\n\n/**\n * @typedef {Object} YSyncOpts\n * @property {Array<ColorDef>} [YSyncOpts.colors]\n * @property {Map<string,ColorDef>} [YSyncOpts.colorMapping]\n * @property {Y.PermanentUserData|null} [YSyncOpts.permanentUserData]\n */\n\n/**\n * @type {Array<ColorDef>}\n */\nconst defaultColors = [{ light: '#ecd44433', dark: '#ecd444' }]\n\n/**\n * @param {Map<string,ColorDef>} colorMapping\n * @param {Array<ColorDef>} colors\n * @param {string} user\n * @return {ColorDef}\n */\nconst getUserColor = (colorMapping, colors, user) => {\n  // @todo do not hit the same color twice if possible\n  if (!colorMapping.has(user)) {\n    if (colorMapping.size < colors.length) {\n      const usedColors = set.create()\n      colorMapping.forEach(color => usedColors.add(color))\n      colors = colors.filter(color => !usedColors.has(color))\n    }\n    colorMapping.set(user, random.oneOf(colors))\n  }\n  return /** @type {ColorDef} */ (colorMapping.get(user))\n}\n\n/**\n * This plugin listens to changes in prosemirror view and keeps yXmlState and view in sync.\n *\n * This plugin also keeps references to the type and the shared document so other plugins can access it.\n * @param {Y.XmlFragment} yXmlFragment\n * @param {YSyncOpts} opts\n * @return {any} Returns a prosemirror plugin that binds to this type\n */\nexport const ySyncPlugin = (yXmlFragment, { colors = defaultColors, colorMapping = new Map(), permanentUserData = null } = {}) => {\n  let changedInitialContent = false\n  const plugin = new Plugin({\n    props: {\n      editable: (state) => {\n        const syncState = ySyncPluginKey.getState(state)\n        return syncState.snapshot == null && syncState.prevSnapshot == null\n      }\n    },\n    key: ySyncPluginKey,\n    state: {\n      init: (initargs, state) => {\n        return {\n          type: yXmlFragment,\n          doc: yXmlFragment.doc,\n          binding: null,\n          snapshot: null,\n          prevSnapshot: null,\n          isChangeOrigin: false,\n          colors,\n          colorMapping,\n          permanentUserData\n        }\n      },\n      apply: (tr, pluginState) => {\n        const change = tr.getMeta(ySyncPluginKey)\n        if (change !== undefined) {\n          pluginState = Object.assign({}, pluginState)\n          for (const key in change) {\n            pluginState[key] = change[key]\n          }\n        }\n        // always set isChangeOrigin. If undefined, this is not change origin.\n        pluginState.isChangeOrigin = change !== undefined && !!change.isChangeOrigin\n        if (pluginState.binding !== null) {\n          if (change !== undefined && (change.snapshot != null || change.prevSnapshot != null)) {\n            // snapshot changed, rerender next\n            setTimeout(() => {\n              if (change.restore == null) {\n                pluginState.binding._renderSnapshot(change.snapshot, change.prevSnapshot, pluginState)\n              } else {\n                pluginState.binding._renderSnapshot(change.snapshot, change.snapshot, pluginState)\n                // reset to current prosemirror state\n                delete pluginState.restore\n                delete pluginState.snapshot\n                delete pluginState.prevSnapshot\n                pluginState.binding._prosemirrorChanged(pluginState.binding.prosemirrorView.state.doc)\n              }\n            }, 0)\n          }\n        }\n        return pluginState\n      }\n    },\n    view: view => {\n      const binding = new ProsemirrorBinding(yXmlFragment, view)\n      // Make sure this is called in a separate context\n      setTimeout(() => {\n        binding._forceRerender()\n        view.dispatch(view.state.tr.setMeta(ySyncPluginKey, { binding }))\n      }, 0)\n      return {\n        update: () => {\n          const pluginState = plugin.getState(view.state)\n          if (pluginState.snapshot == null && pluginState.prevSnapshot == null) {\n            if (changedInitialContent || view.state.doc.content.findDiffStart(view.state.doc.type.createAndFill().content) !== null) {\n              changedInitialContent = true\n              binding._prosemirrorChanged(view.state.doc)\n            }\n          }\n        },\n        destroy: () => {\n          binding.destroy()\n        }\n      }\n    }\n  })\n  return plugin\n}\n\n/**\n * @param {any} tr\n * @param {any} relSel\n * @param {ProsemirrorBinding} binding\n */\nconst restoreRelativeSelection = (tr, relSel, binding) => {\n  if (relSel !== null && relSel.anchor !== null && relSel.head !== null) {\n    const anchor = relativePositionToAbsolutePosition(binding.doc, binding.type, relSel.anchor, binding.mapping)\n    const head = relativePositionToAbsolutePosition(binding.doc, binding.type, relSel.head, binding.mapping)\n    if (anchor !== null && head !== null) {\n      tr = tr.setSelection(TextSelection.create(tr.doc, anchor, head))\n    }\n  }\n}\n\nexport const getRelativeSelection = (pmbinding, state) => ({\n  anchor: absolutePositionToRelativePosition(state.selection.anchor, pmbinding.type, pmbinding.mapping),\n  head: absolutePositionToRelativePosition(state.selection.head, pmbinding.type, pmbinding.mapping)\n})\n\n/**\n * Binding for prosemirror.\n *\n * @protected\n */\nexport class ProsemirrorBinding {\n  /**\n   * @param {Y.XmlFragment} yXmlFragment The bind source\n   * @param {any} prosemirrorView The target binding\n   */\n  constructor (yXmlFragment, prosemirrorView) {\n    this.type = yXmlFragment\n    this.prosemirrorView = prosemirrorView\n    this.mux = createMutex()\n    /**\n     * @type {ProsemirrorMapping}\n     */\n    this.mapping = new Map()\n    this._observeFunction = this._typeChanged.bind(this)\n    /**\n     * @type {Y.Doc}\n     */\n    // @ts-ignore\n    this.doc = yXmlFragment.doc\n    /**\n     * current selection as relative positions in the Yjs model\n     */\n    this.beforeTransactionSelection = null\n    this.beforeAllTransactions = () => {\n      if (this.beforeTransactionSelection === null) {\n        this.beforeTransactionSelection = getRelativeSelection(this, prosemirrorView.state)\n      }\n    }\n    this.afterAllTransactions = () => {\n      this.beforeTransactionSelection = null\n    }\n\n    this.doc.on('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.on('afterAllTransactions', this.afterAllTransactions)\n    yXmlFragment.observeDeep(this._observeFunction)\n\n    this._domSelectionInView = null\n  }\n\n  _isLocalCursorInView () {\n    if (!this.prosemirrorView.hasFocus()) return false\n    if (environment.isBrowser && this._domSelectionInView === null) {\n      // Calculate the domSelectionInView and clear by next tick after all events are finished\n      setTimeout(() => {\n        this._domSelectionInView = null\n      }, 0)\n      this._domSelectionInView = this._isDomSelectionInView()\n    }\n    return this._domSelectionInView\n  }\n\n  _isDomSelectionInView () {\n    const selection = this.prosemirrorView._root.getSelection()\n\n    const range = this.prosemirrorView._root.createRange()\n    range.setStart(selection.anchorNode, selection.anchorOffset)\n    range.setEnd(selection.focusNode, selection.focusOffset)\n\n    // This is a workaround for an edgecase where getBoundingClientRect will\n    // return zero values if the selection is collapsed at the start of a newline\n    // see reference here: https://stackoverflow.com/a/59780954\n    const rects = range.getClientRects()\n    if (rects.length === 0) {\n      // probably buggy newline behavior, explicitly select the node contents\n      if (range.startContainer && range.collapsed) {\n        range.selectNodeContents(range.startContainer)\n      }\n    }\n\n    const bounding = range.getBoundingClientRect()\n    const documentElement = dom.doc.documentElement\n\n    return bounding.bottom >= 0 && bounding.right >= 0 &&\n      bounding.left <= (window.innerWidth || documentElement.clientWidth || 0) &&\n      bounding.top <= (window.innerHeight || documentElement.clientHeight || 0)\n  }\n\n  renderSnapshot (snapshot, prevSnapshot) {\n    if (!prevSnapshot) {\n      prevSnapshot = Y.createSnapshot(Y.createDeleteSet(), new Map())\n    }\n    this.prosemirrorView.dispatch(this.prosemirrorView.state.tr.setMeta(ySyncPluginKey, { snapshot, prevSnapshot }))\n  }\n\n  unrenderSnapshot () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map(t => createNodeFromYElement(/** @type {Y.XmlElement} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      const tr = this.prosemirrorView.state.tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      tr.setMeta(ySyncPluginKey, { snapshot: null, prevSnapshot: null })\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _forceRerender () {\n    this.mapping = new Map()\n    this.mux(() => {\n      const fragmentContent = this.type.toArray().map(t => createNodeFromYElement(/** @type {Y.XmlElement} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      const tr = this.prosemirrorView.state.tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      this.prosemirrorView.dispatch(tr.setMeta(ySyncPluginKey, { isChangeOrigin: true }))\n    })\n  }\n\n  /**\n   * @param {Y.Snapshot} snapshot\n   * @param {Y.Snapshot} prevSnapshot\n   * @param {Object} pluginState\n   */\n  _renderSnapshot (snapshot, prevSnapshot, pluginState) {\n    if (!snapshot) {\n      snapshot = Y.snapshot(this.doc)\n    }\n    // clear mapping because we are going to rerender\n    this.mapping = new Map()\n    this.mux(() => {\n      this.doc.transact(transaction => {\n        // before rendering, we are going to sanitize ops and split deleted ops\n        // if they were deleted by seperate users.\n        const pud = pluginState.permanentUserData\n        if (pud) {\n          pud.dss.forEach(ds => {\n            Y.iterateDeletedStructs(transaction, ds, item => {})\n          })\n        }\n        const computeYChange = (type, id) => {\n          const user = type === 'added' ? pud.getUserByClientId(id.client) : pud.getUserByDeletedId(id)\n          return {\n            user,\n            type,\n            color: getUserColor(pluginState.colorMapping, pluginState.colors, user)\n          }\n        }\n        // Create document fragment and render\n        const fragmentContent = Y.typeListToArraySnapshot(this.type, new Y.Snapshot(prevSnapshot.ds, snapshot.sv)).map(t => {\n          if (!t._item.deleted || isVisible(t._item, snapshot) || isVisible(t._item, prevSnapshot)) {\n            return createNodeFromYElement(t, this.prosemirrorView.state.schema, new Map(), snapshot, prevSnapshot, computeYChange)\n          } else {\n            // No need to render elements that are not visible by either snapshot.\n            // If a client adds and deletes content in the same snapshot the element is not visible by either snapshot.\n            return null\n          }\n        }).filter(n => n !== null)\n        // @ts-ignore\n        const tr = this.prosemirrorView.state.tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n        this.prosemirrorView.dispatch(tr.setMeta(ySyncPluginKey, { isChangeOrigin: true }))\n      }, ySyncPluginKey)\n    })\n  }\n\n  /**\n   * @param {Array<Y.YEvent>} events\n   * @param {Y.Transaction} transaction\n   */\n  _typeChanged (events, transaction) {\n    const syncState = ySyncPluginKey.getState(this.prosemirrorView.state)\n    if (events.length === 0 || syncState.snapshot != null || syncState.prevSnapshot != null) {\n      // drop out if snapshot is active\n      this.renderSnapshot(syncState.snapshot, syncState.prevSnapshot)\n      return\n    }\n    this.mux(() => {\n      /**\n       * @param {any} _\n       * @param {Y.AbstractType} type\n       */\n      const delType = (_, type) => this.mapping.delete(type)\n      Y.iterateDeletedStructs(transaction, transaction.deleteSet, struct => struct.constructor === Y.Item && this.mapping.delete(/** @type {Y.ContentType} */ (/** @type {Y.Item} */ (struct).content).type))\n      transaction.changed.forEach(delType)\n      transaction.changedParentTypes.forEach(delType)\n      const fragmentContent = this.type.toArray().map(t => createNodeIfNotExists(/** @type {Y.XmlElement | Y.XmlHook} */ (t), this.prosemirrorView.state.schema, this.mapping)).filter(n => n !== null)\n      // @ts-ignore\n      let tr = this.prosemirrorView.state.tr.replace(0, this.prosemirrorView.state.doc.content.size, new PModel.Slice(new PModel.Fragment(fragmentContent), 0, 0))\n      restoreRelativeSelection(tr, this.beforeTransactionSelection, this)\n      tr = tr.setMeta(ySyncPluginKey, { isChangeOrigin: true })\n      if (this.beforeTransactionSelection !== null && this._isLocalCursorInView()) {\n        tr.scrollIntoView()\n      }\n      this.prosemirrorView.dispatch(tr)\n    })\n  }\n\n  _prosemirrorChanged (doc) {\n    this.mux(() => {\n      this.doc.transact(() => {\n        updateYFragment(this.doc, this.type, doc, this.mapping)\n        this.beforeTransactionSelection = getRelativeSelection(this, this.prosemirrorView.state)\n      }, ySyncPluginKey)\n    })\n  }\n\n  destroy () {\n    this.type.unobserveDeep(this._observeFunction)\n    this.doc.off('beforeAllTransactions', this.beforeAllTransactions)\n    this.doc.off('afterAllTransactions', this.afterAllTransactions)\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlElement | Y.XmlHook} el\n * @param {PModel.Schema} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null}\n */\nconst createNodeIfNotExists = (el, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const node = /** @type {PModel.Node} */ (mapping.get(el))\n  if (node === undefined) {\n    if (el instanceof Y.XmlElement) {\n      return createNodeFromYElement(el, schema, mapping, snapshot, prevSnapshot, computeYChange)\n    } else {\n      throw error.methodUnimplemented() // we are currently not handling hooks\n    }\n  }\n  return node\n}\n\n/**\n * @private\n * @param {Y.XmlElement} el\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {PModel.Node | null} Returns node if node could be created. Otherwise it deletes the yjs type and returns null\n */\nconst createNodeFromYElement = (el, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const children = []\n  const createChildren = type => {\n    if (type.constructor === Y.XmlElement) {\n      const n = createNodeIfNotExists(type, schema, mapping, snapshot, prevSnapshot, computeYChange)\n      if (n !== null) {\n        children.push(n)\n      }\n    } else {\n      const ns = createTextNodesFromYText(type, schema, mapping, snapshot, prevSnapshot, computeYChange)\n      if (ns !== null) {\n        ns.forEach(textchild => {\n          if (textchild !== null) {\n            children.push(textchild)\n          }\n        })\n      }\n    }\n  }\n  if (snapshot === undefined || prevSnapshot === undefined) {\n    el.toArray().forEach(createChildren)\n  } else {\n    Y.typeListToArraySnapshot(el, new Y.Snapshot(prevSnapshot.ds, snapshot.sv)).forEach(createChildren)\n  }\n  try {\n    const attrs = el.getAttributes(snapshot)\n    if (snapshot !== undefined) {\n      if (!isVisible(/** @type {Y.Item} */ (el._item), snapshot)) {\n        attrs.ychange = computeYChange ? computeYChange('removed', /** @type {Y.Item} */ (el._item).id) : { type: 'removed' }\n      } else if (!isVisible(/** @type {Y.Item} */ (el._item), prevSnapshot)) {\n        attrs.ychange = computeYChange ? computeYChange('added', /** @type {Y.Item} */ (el._item).id) : { type: 'added' }\n      }\n    }\n    const node = schema.node(el.nodeName, attrs, children)\n    mapping.set(el, node)\n    return node\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (el.doc).transact(transaction => {\n      /** @type {Y.Item} */ (el._item).delete(transaction)\n    }, ySyncPluginKey)\n    mapping.delete(el)\n    return null\n  }\n}\n\n/**\n * @private\n * @param {Y.XmlText} text\n * @param {any} schema\n * @param {ProsemirrorMapping} mapping\n * @param {Y.Snapshot} [snapshot]\n * @param {Y.Snapshot} [prevSnapshot]\n * @param {function('removed' | 'added', Y.ID):any} [computeYChange]\n * @return {Array<PModel.Node>|null}\n */\nconst createTextNodesFromYText = (text, schema, mapping, snapshot, prevSnapshot, computeYChange) => {\n  const nodes = []\n  const deltas = text.toDelta(snapshot, prevSnapshot, computeYChange)\n  try {\n    for (let i = 0; i < deltas.length; i++) {\n      const delta = deltas[i]\n      const marks = []\n      for (const markName in delta.attributes) {\n        marks.push(schema.mark(markName, delta.attributes[markName]))\n      }\n      nodes.push(schema.text(delta.insert, marks))\n    }\n  } catch (e) {\n    // an error occured while creating the node. This is probably a result of a concurrent action.\n    /** @type {Y.Doc} */ (text.doc).transact(transaction => {\n      /** @type {Y.Item} */ (text._item).delete(transaction)\n    }, ySyncPluginKey)\n    return null\n  }\n  // @ts-ignore\n  return nodes\n}\n\n/**\n * @private\n * @param {Array<any>} nodes prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlText}\n */\nconst createTypeFromTextNodes = (nodes, mapping) => {\n  const type = new Y.XmlText()\n  const delta = nodes.map(node => ({\n    // @ts-ignore\n    insert: node.text,\n    attributes: marksToAttributes(node.marks)\n  }))\n  type.applyDelta(delta)\n  mapping.set(type, nodes)\n  return type\n}\n\n/**\n * @private\n * @param {any} node prosemirror node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement}\n */\nconst createTypeFromElementNode = (node, mapping) => {\n  const type = new Y.XmlElement(node.type.name)\n  for (const key in node.attrs) {\n    const val = node.attrs[key]\n    if (val !== null && key !== 'ychange') {\n      type.setAttribute(key, val)\n    }\n  }\n  type.insert(0, normalizePNodeContent(node).map(n => createTypeFromTextOrElementNode(n, mapping)))\n  mapping.set(type, node)\n  return type\n}\n\n/**\n * @private\n * @param {PModel.Node|Array<PModel.Node>} node prosemirror text node\n * @param {ProsemirrorMapping} mapping\n * @return {Y.XmlElement|Y.XmlText}\n */\nconst createTypeFromTextOrElementNode = (node, mapping) => node instanceof Array ? createTypeFromTextNodes(node, mapping) : createTypeFromElementNode(node, mapping)\n\nconst isObject = (val) => typeof val === 'object' && val !== null\n\nconst equalAttrs = (pattrs, yattrs) => {\n  const keys = Object.keys(pattrs).filter(key => pattrs[key] !== null)\n  let eq = keys.length === Object.keys(yattrs).filter(key => yattrs[key] !== null).length\n  for (let i = 0; i < keys.length && eq; i++) {\n    const key = keys[i]\n    const l = pattrs[key]\n    const r = yattrs[key]\n    eq = key === 'ychange' || l === r || (isObject(l) && isObject(r) && equalAttrs(l, r))\n  }\n  return eq\n}\n\n/**\n * @typedef {Array<Array<PModel.Node>|PModel.Node>} NormalizedPNodeContent\n */\n\n/**\n * @param {any} pnode\n * @return {NormalizedPNodeContent}\n */\nconst normalizePNodeContent = pnode => {\n  const c = pnode.content.content\n  const res = []\n  for (let i = 0; i < c.length; i++) {\n    const n = c[i]\n    if (n.isText) {\n      const textNodes = []\n      for (let tnode = c[i]; i < c.length && tnode.isText; tnode = c[++i]) {\n        textNodes.push(tnode)\n      }\n      i--\n      res.push(textNodes)\n    } else {\n      res.push(n)\n    }\n  }\n  return res\n}\n\n/**\n * @param {Y.XmlText} ytext\n * @param {Array<any>} ptexts\n */\nconst equalYTextPText = (ytext, ptexts) => {\n  const delta = ytext.toDelta()\n  return delta.length === ptexts.length && delta.every((d, i) => d.insert === /** @type {any} */ (ptexts[i]).text && object.keys(d.attributes || {}).length === ptexts[i].marks.length && ptexts[i].marks.every(mark => equalAttrs(d.attributes[mark.type.name] || {}, mark.attrs)))\n}\n\n/**\n * @param {Y.XmlElement|Y.XmlText|Y.XmlHook} ytype\n * @param {any|Array<any>} pnode\n */\nconst equalYTypePNode = (ytype, pnode) => {\n  if (ytype instanceof Y.XmlElement && !(pnode instanceof Array) && matchNodeName(ytype, pnode)) {\n    const normalizedContent = normalizePNodeContent(pnode)\n    return ytype._length === normalizedContent.length && equalAttrs(ytype.getAttributes(), pnode.attrs) && ytype.toArray().every((ychild, i) => equalYTypePNode(ychild, normalizedContent[i]))\n  }\n  return ytype instanceof Y.XmlText && pnode instanceof Array && equalYTextPText(ytype, pnode)\n}\n\n/**\n * @param {PModel.Node | Array<PModel.Node> | undefined} mapped\n * @param {PModel.Node | Array<PModel.Node>} pcontent\n */\nconst mappedIdentity = (mapped, pcontent) => mapped === pcontent || (mapped instanceof Array && pcontent instanceof Array && mapped.length === pcontent.length && mapped.every((a, i) => pcontent[i] === a))\n\n/**\n * @param {Y.XmlElement} ytype\n * @param {PModel.Node} pnode\n * @param {ProsemirrorMapping} mapping\n * @return {{ foundMappedChild: boolean, equalityFactor: number }}\n */\nconst computeChildEqualityFactor = (ytype, pnode, mapping) => {\n  const yChildren = ytype.toArray()\n  const pChildren = normalizePNodeContent(pnode)\n  const pChildCnt = pChildren.length\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(yChildCnt, pChildCnt)\n  let left = 0\n  let right = 0\n  let foundMappedChild = false\n  for (; left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (mappedIdentity(mapping.get(leftY), leftP)) {\n      foundMappedChild = true// definite (good) match!\n    } else if (!equalYTypePNode(leftY, leftP)) {\n      break\n    }\n  }\n  for (; left + right < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (mappedIdentity(mapping.get(rightY), rightP)) {\n      foundMappedChild = true\n    } else if (!equalYTypePNode(rightY, rightP)) {\n      break\n    }\n  }\n  return {\n    equalityFactor: left + right,\n    foundMappedChild\n  }\n}\n\nconst ytextTrans = ytext => {\n  let str = ''\n  /**\n   * @type {Y.Item|null}\n   */\n  let n = ytext._start\n  const nAttrs = {}\n  while (n !== null) {\n    if (!n.deleted) {\n      if (n.countable && n.content instanceof Y.ContentString) {\n        str += n.content.str\n      } else if (n.content instanceof Y.ContentFormat) {\n        nAttrs[n.content.key] = null\n      }\n    }\n    n = n.right\n  }\n  return {\n    str,\n    nAttrs\n  }\n}\n\n/**\n * @todo test this more\n *\n * @param {Y.Text} ytext\n * @param {Array<any>} ptexts\n * @param {ProsemirrorMapping} mapping\n */\nconst updateYText = (ytext, ptexts, mapping) => {\n  mapping.set(ytext, ptexts)\n  const { nAttrs, str } = ytextTrans(ytext)\n  const content = ptexts.map(p => ({ insert: /** @type {any} */ (p).text, attributes: Object.assign({}, nAttrs, marksToAttributes(p.marks)) }))\n  const { insert, remove, index } = simpleDiff(str, content.map(c => c.insert).join(''))\n  ytext.delete(index, remove)\n  ytext.insert(index, insert)\n  ytext.applyDelta(content.map(c => ({ retain: c.insert.length, attributes: c.attributes })))\n}\n\nconst marksToAttributes = marks => {\n  const pattrs = {}\n  marks.forEach(mark => {\n    if (mark.type.name !== 'ychange') {\n      pattrs[mark.type.name] = mark.attrs\n    }\n  })\n  return pattrs\n}\n\n/**\n * @private\n * @param {Y.Doc} y\n * @param {Y.XmlFragment} yDomFragment\n * @param {any} pNode\n * @param {ProsemirrorMapping} mapping\n */\nexport const updateYFragment = (y, yDomFragment, pNode, mapping) => {\n  if (yDomFragment instanceof Y.XmlElement && yDomFragment.nodeName !== pNode.type.name) {\n    throw new Error('node name mismatch!')\n  }\n  mapping.set(yDomFragment, pNode)\n  // update attributes\n  if (yDomFragment instanceof Y.XmlElement) {\n    const yDomAttrs = yDomFragment.getAttributes()\n    const pAttrs = pNode.attrs\n    for (const key in pAttrs) {\n      if (pAttrs[key] !== null) {\n        if (yDomAttrs[key] !== pAttrs[key] && key !== 'ychange') {\n          yDomFragment.setAttribute(key, pAttrs[key])\n        }\n      } else {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n    // remove all keys that are no longer in pAttrs\n    for (const key in yDomAttrs) {\n      if (pAttrs[key] === undefined) {\n        yDomFragment.removeAttribute(key)\n      }\n    }\n  }\n  // update children\n  const pChildren = normalizePNodeContent(pNode)\n  const pChildCnt = pChildren.length\n  const yChildren = yDomFragment.toArray()\n  const yChildCnt = yChildren.length\n  const minCnt = math.min(pChildCnt, yChildCnt)\n  let left = 0\n  let right = 0\n  // find number of matching elements from left\n  for (;left < minCnt; left++) {\n    const leftY = yChildren[left]\n    const leftP = pChildren[left]\n    if (!mappedIdentity(mapping.get(leftY), leftP)) {\n      if (equalYTypePNode(leftY, leftP)) {\n        // update mapping\n        mapping.set(leftY, leftP)\n      } else {\n        break\n      }\n    }\n  }\n  // find number of matching elements from right\n  for (;right + left + 1 < minCnt; right++) {\n    const rightY = yChildren[yChildCnt - right - 1]\n    const rightP = pChildren[pChildCnt - right - 1]\n    if (!mappedIdentity(mapping.get(rightY), rightP)) {\n      if (equalYTypePNode(rightY, rightP)) {\n        // update mapping\n        mapping.set(rightY, rightP)\n      } else {\n        break\n      }\n    }\n  }\n  y.transact(() => {\n    // try to compare and update\n    while (yChildCnt - left - right > 0 && pChildCnt - left - right > 0) {\n      const leftY = yChildren[left]\n      const leftP = pChildren[left]\n      const rightY = yChildren[yChildCnt - right - 1]\n      const rightP = pChildren[pChildCnt - right - 1]\n      if (leftY instanceof Y.XmlText && leftP instanceof Array) {\n        if (!equalYTextPText(leftY, leftP)) {\n          updateYText(leftY, leftP, mapping)\n        }\n        left += 1\n      } else {\n        let updateLeft = leftY instanceof Y.XmlElement && matchNodeName(leftY, leftP)\n        let updateRight = rightY instanceof Y.XmlElement && matchNodeName(rightY, rightP)\n        if (updateLeft && updateRight) {\n          // decide which which element to update\n          const equalityLeft = computeChildEqualityFactor(/** @type {Y.XmlElement} */ (leftY), /** @type {PModel.Node} */ (leftP), mapping)\n          const equalityRight = computeChildEqualityFactor(/** @type {Y.XmlElement} */ (rightY), /** @type {PModel.Node} */ (rightP), mapping)\n          if (equalityLeft.foundMappedChild && !equalityRight.foundMappedChild) {\n            updateRight = false\n          } else if (!equalityLeft.foundMappedChild && equalityRight.foundMappedChild) {\n            updateLeft = false\n          } else if (equalityLeft.equalityFactor < equalityRight.equalityFactor) {\n            updateLeft = false\n          } else {\n            updateRight = false\n          }\n        }\n        if (updateLeft) {\n          updateYFragment(y, /** @type {Y.XmlFragment} */ (leftY), /** @type {PModel.Node} */ (leftP), mapping)\n          left += 1\n        } else if (updateRight) {\n          updateYFragment(y, /** @type {Y.XmlFragment} */ (rightY), /** @type {PModel.Node} */ (rightP), mapping)\n          right += 1\n        } else {\n          yDomFragment.delete(left, 1)\n          yDomFragment.insert(left, [createTypeFromTextOrElementNode(leftP, mapping)])\n          left += 1\n        }\n      }\n    }\n    const yDelLen = yChildCnt - left - right\n    if (yDelLen > 0) {\n      yDomFragment.delete(left, yDelLen)\n    }\n    if (left + right < pChildCnt) {\n      const ins = []\n      for (let i = left; i < pChildCnt - right; i++) {\n        ins.push(createTypeFromTextOrElementNode(pChildren[i], mapping))\n      }\n      yDomFragment.insert(left, ins)\n    }\n  }, ySyncPluginKey)\n}\n\n/**\n * @function\n * @param {Y.XmlElement} yElement\n * @param {any} pNode Prosemirror Node\n */\nconst matchNodeName = (yElement, pNode) => !(pNode instanceof Array) && yElement.nodeName === pNode.type.name\n","\nimport * as Y from 'yjs'\nimport { Decoration, DecorationSet } from 'prosemirror-view' // eslint-disable-line\nimport { Plugin } from 'prosemirror-state' // eslint-disable-line\nimport { Awareness } from 'y-protocols/awareness' // eslint-disable-line\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition, setMeta } from '../lib.js'\nimport { yCursorPluginKey, ySyncPluginKey } from './keys.js'\n\nimport * as math from 'lib0/math'\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return HTMLElement\n */\nexport const defaultCursorBuilder = user => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  cursor.insertBefore(userDiv, null)\n  return cursor\n}\n\nconst rxValidColor = /^#[0-9a-fA-F]{6}$/\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @return {any} DecorationSet\n */\nexport const createDecorations = (state, awareness, createCursor) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (ystate.snapshot != null || ystate.prevSnapshot != null || ystate.binding === null) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (clientId === y.clientID) {\n      return\n    }\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      } else if (!rxValidColor.test(user.color)) {\n        // We only support 6-digit RGB colors in y-prosemirror\n        console.warn('A user uses an unsupported color format', user)\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.anchor), ystate.binding.mapping)\n      let head = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.head), ystate.binding.mapping)\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(Decoration.widget(head, () => createCursor(user), { key: clientId + '', side: 10 }))\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(Decoration.inline(from, to, { style: `background-color: ${user.color}70` }, { inclusiveEnd: true, inclusiveStart: false }))\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} [opts]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @param {string} [opts.cursorStateField] By default all editor bindings use the awareness 'cursor' field to propagate cursor information.\n * @return {any}\n */\nexport const yCursorPlugin = (awareness, { cursorBuilder = defaultCursorBuilder, getSelection = state => state.selection } = {}, cursorStateField = 'cursor') => new Plugin({\n  key: yCursorPluginKey,\n  state: {\n    init (_, state) {\n      return createDecorations(state, awareness, cursorBuilder)\n    },\n    apply (tr, prevState, oldState, newState) {\n      const ystate = ySyncPluginKey.getState(newState)\n      const yCursorState = tr.getMeta(yCursorPluginKey)\n      if ((ystate && ystate.isChangeOrigin) || (yCursorState && yCursorState.awarenessUpdated)) {\n        return createDecorations(newState, awareness, cursorBuilder)\n      }\n      return prevState.map(tr.mapping, tr.doc)\n    }\n  },\n  props: {\n    decorations: state => {\n      return yCursorPluginKey.getState(state)\n    }\n  },\n  view: view => {\n    const awarenessListener = () => {\n      // @ts-ignore\n      if (view.docView) {\n        setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n      }\n    }\n    const updateCursorInfo = () => {\n      const ystate = ySyncPluginKey.getState(view.state)\n      // @note We make implicit checks when checking for the cursor property\n      const current = awareness.getLocalState() || {}\n      if (view.hasFocus() && ystate.binding !== null) {\n        const selection = getSelection(view.state)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const anchor = absolutePositionToRelativePosition(selection.anchor, ystate.type, ystate.binding.mapping)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const head = absolutePositionToRelativePosition(selection.head, ystate.type, ystate.binding.mapping)\n        if (current.cursor == null || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.anchor), anchor) || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.head), head)) {\n          awareness.setLocalStateField(cursorStateField, {\n            anchor, head\n          })\n        }\n      } else if (current.cursor != null && relativePositionToAbsolutePosition(ystate.doc, ystate.type, Y.createRelativePositionFromJSON(current.cursor.anchor), ystate.binding.mapping) !== null) {\n        // delete cursor information if current cursor information is owned by this editor binding\n        awareness.setLocalStateField(cursorStateField, null)\n      }\n    }\n    awareness.on('change', awarenessListener)\n    view.dom.addEventListener('focusin', updateCursorInfo)\n    view.dom.addEventListener('focusout', updateCursorInfo)\n    return {\n      update: updateCursorInfo,\n      destroy: () => {\n        view.dom.removeEventListener('focusin', updateCursorInfo)\n        view.dom.removeEventListener('focusout', updateCursorInfo)\n        awareness.off('change', awarenessListener)\n        awareness.setLocalStateField(cursorStateField, null)\n      }\n    }\n  }\n})\n","\nimport { Plugin, PluginKey } from 'prosemirror-state' // eslint-disable-line\n\nimport { getRelativeSelection } from './sync-plugin.js'\nimport { UndoManager, Item, ContentType, XmlElement, Text } from 'yjs'\nimport { yUndoPluginKey, ySyncPluginKey } from './keys.js'\n\nexport const undo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.undo()\n    return true\n  }\n}\n\nexport const redo = state => {\n  const undoManager = yUndoPluginKey.getState(state).undoManager\n  if (undoManager != null) {\n    undoManager.redo()\n    return true\n  }\n}\n\nexport const yUndoPlugin = ({ protectedNodes = new Set(['paragraph']), trackedOrigins = [] } = {}) => new Plugin({\n  key: yUndoPluginKey,\n  state: {\n    init: (initargs, state) => {\n      // TODO: check if plugin order matches and fix\n      const ystate = ySyncPluginKey.getState(state)\n      const undoManager = new UndoManager(ystate.type, {\n        trackedOrigins: new Set([ySyncPluginKey].concat(trackedOrigins)),\n        deleteFilter: item => !(item instanceof Item) ||\n          !(item.content instanceof ContentType) ||\n          !(item.content.type instanceof Text ||\n            (item.content.type instanceof XmlElement && protectedNodes.has(item.content.type.nodeName))) ||\n          item.content.type._length === 0\n      })\n      return {\n        undoManager,\n        prevSel: null,\n        hasUndoOps: undoManager.undoStack.length > 0,\n        hasRedoOps: undoManager.redoStack.length > 0\n      }\n    },\n    apply: (tr, val, oldState, state) => {\n      const binding = ySyncPluginKey.getState(state).binding\n      const undoManager = val.undoManager\n      const hasUndoOps = undoManager.undoStack.length > 0\n      const hasRedoOps = undoManager.redoStack.length > 0\n      if (binding) {\n        return {\n          undoManager,\n          prevSel: getRelativeSelection(binding, oldState),\n          hasUndoOps,\n          hasRedoOps\n        }\n      } else {\n        if (hasUndoOps !== val.hasUndoOps || hasRedoOps !== val.hasRedoOps) {\n          return Object.assign({}, val, {\n            hasUndoOps: undoManager.undoStack.length > 0,\n            hasRedoOps: undoManager.redoStack.length > 0\n          })\n        } else { // nothing changed\n          return val\n        }\n      }\n    }\n  },\n  view: view => {\n    const ystate = ySyncPluginKey.getState(view.state)\n    const undoManager = yUndoPluginKey.getState(view.state).undoManager\n    undoManager.on('stack-item-added', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        stackItem.meta.set(binding, yUndoPluginKey.getState(view.state).prevSel)\n      }\n    })\n    undoManager.on('stack-item-popped', ({ stackItem }) => {\n      const binding = ystate.binding\n      if (binding) {\n        binding.beforeTransactionSelection = stackItem.meta.get(binding) || binding.beforeTransactionSelection\n      }\n    })\n    return {\n      destroy: () => {\n        undoManager.destroy()\n      }\n    }\n  }\n})\n","import { exampleSetup } from 'prosemirror-example-setup'\nimport { keymap } from 'prosemirror-keymap'\nimport { ySyncPlugin, yCursorPlugin, yUndoPlugin, undo, redo } from 'y-prosemirror'\n\nimport { EditorContext } from 'pm/context/EditorContext'\nimport { schema } from './schema'\n\nexport const plugins = (ctx: EditorContext) =>\n  [\n    ySyncPlugin(ctx.yjsProvider.yXmlFragment, {\n      permanentUserData: ctx.yjsProvider.permanentUserData,\n      colors: [\n        { light: '#ecd44433', dark: '#ecd444' },\n        { light: '#ee635233', dark: '#ee6352' },\n        { light: '#6eeb8333', dark: '#6eeb83' }\n      ]\n    }),\n    yCursorPlugin(ctx.yjsProvider.provider.awareness),\n    yUndoPlugin(),\n    keymap({\n      'Mod-z': undo,\n      'Mod-y': redo,\n      'Mod-Shift-z': redo\n    }),\n  ].concat(exampleSetup({ schema, history: false }))\n","import React, { useLayoutEffect, useRef } from 'react'\nimport { EditorView } from 'prosemirror-view'\nimport { EditorState, Transaction } from 'prosemirror-state'\n\nimport { schema } from './schema'\n\nimport { plugins } from './plugins'\n\nimport { EditorContext, useEditorContext } from './context/EditorContext'\nimport { IProviders } from './context/Providers'\n\nimport './editor.css'\nimport './prosemirror-example-setup.css'\nimport './menu.css'\nimport './yjs.css'\n\ninterface EditorProps {\n  className?: string\n  onEditorReady?: (providers: IProviders) => void\n  onEdit?: (state: EditorState) => void\n}\n\nexport function PMEditor(props: EditorProps) {\n  const { className = '' } = props\n  const editorViewRef = useRef(null)\n  const editorRef = useRef<EditorView | null>(null)\n  const ctx = useEditorContext()\n\n  useLayoutEffect(() => {\n    ctx.yjsProvider.init()\n    const state = createEditorState(ctx)\n    const editorViewDOM = editorViewRef.current\n    if (editorViewDOM) {\n      editorRef.current = createEditorView(editorViewDOM, state)\n      ctx.viewProvider.init(editorRef.current)\n      props.onEditorReady && props?.onEditorReady(ctx)\n    }\n    return () => {\n      editorRef.current?.destroy()\n    }\n  }, [])\n\n  function createEditorState(ctx: EditorContext) {\n    return EditorState.create({\n      schema,\n      plugins: plugins(ctx)\n    })\n  }\n\n  function createEditorView(element: HTMLDivElement, state: EditorState) {\n    const view = new EditorView({ mount: element }, {\n      state,\n      dispatchTransaction,\n    })\n    // @ts-ignore\n    if (window) window.editorView = view\n    return view\n  }\n\n  function dispatchTransaction(transaction: Transaction) {\n    if (!editorRef.current) {\n      return\n    }\n    const oldEditorState = editorRef.current.state\n    const editorState = oldEditorState.apply(transaction)\n    editorRef.current.updateState(editorState)\n    if (props.onEdit) {\n      props.onEdit(editorState)\n    }\n  }\n\n  return (\n    <div id=\"example-editor\" ref={editorViewRef} className={className}/>\n  )\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { applyDevTools } from 'prosemirror-dev-tools'\n\nimport { Toolbar } from '../Toolbar'\nimport { RightPanel } from './RightPanel'\n\nimport { PMEditor } from 'pm/PMEditor'\nimport { ReactEditorContext } from 'pm/context/EditorContext'\nimport { createDefaultProviders, IProviders } from 'pm/context/Providers'\n\nexport function Editor() {\n  const editorProviders = useMemo(() => createDefaultProviders(), [])\n\n  function handleEditorReady(ctx: IProviders) {\n    applyDevTools(ctx.viewProvider.view)\n  }\n  return (\n    <ReactEditorContext.Provider value={editorProviders}>\n      <div>\n        <ViewGrid>\n          <LeftSide>\n            <Toolbar className=\"toolbar 'full-width\"/>\n            <div className=\"pm-editor full-width\">\n              <PMEditor\n                onEditorReady={handleEditorReady}\n              />\n            </div>\n          </LeftSide>\n          <RightPanel/>\n        </ViewGrid>\n      </div>\n    </ReactEditorContext.Provider>\n  )\n}\n\nconst ViewGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: auto auto;\n  margin-top: 1rem;\n`\nconst LeftSide = styled.div`\n  margin-right: 1rem;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Editor } from '../components/editor/Editor'\n\nexport function FrontPage() {\n  return (\n    <Container>\n      <header>\n        <h1><a href=\"https://teemukoivisto.github.io/pm-node-attrs-yjs-snapshots/\">\n          ProseMirror node attributes persistence with Yjs snapshots</a></h1>\n        <p>Somehow I can't get them to work</p>\n        <p><a href=\"https://github.com/TeemuKoivisto/pm-node-attrs-yjs-snapshots\">Github repo</a></p>\n      </header>\n      <Editor/>\n    </Container>\n  )\n}\n\nconst Container = styled.div``\n","import * as React from 'react'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport { WrappedRoute } from './components/WrappedRoute'\n\nimport { FrontPage } from './pages/FrontPage'\n\nexport const Routes = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <WrappedRoute exact path=\"/\" component={FrontPage}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n)\n","import * as React from 'react'\nimport { render } from 'react-dom'\n\nimport { Routes } from './routes'\n\nimport './index.css'\n\nrender(\n  <Routes />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}